//https://playground.babylonjs.com/#22J0X5
//https://playground.babylonjs.com/#2Y20RL#11
var createScene = function () {

    var scene = new BABYLON.Scene(engine);
	var camera = new BABYLON.ArcRotateCamera("Camera", 0, 0, 0, BABYLON.Vector3.Zero(), scene);
    var BAR_Door_Opened=1.5708;        //90°
    var Door_Opened=1.5708;        //90°
    var ELDoor_Opened=2.96706;      //170°
    var AV_HK_Opened=1.65806;        //95°
    var AV_HF_Opened=1.51844;        //87°    
    var HF_Top_Hinge=1.51844; //87°
    var HF_Bot_Hinge=1.8675; //107°


    var Door_Opened=1.8326;          //105°
    var Door_Closed=0;
    var Drawer300_Opened=300;
    var Drawer550_Opened=550;
    var Drawer600_Opened=600;
    var Drawer_Closed=0;
    var BLDS=0;     //BAR Left Door State
    var BRDS=0;     //BAR Right Door State
    var BSSS=0;     //BAR Sliding Shelf State
    var KIBS=0;     //Kitchen TC Internal Bottom Drawer State
    var KICS=0;     //Kitchen TC Internal Center Drawer State
    var KITS=0;     //Kitchen TC Internal Top Drawer State
    var A1RDS=0;   //A2 Left Door State
    var A2LDS=0;   //A3 Left Door State

    // The first parameter can be used to specify which mesh to import. Here we import all meshes
    BABYLON.SceneLoader.Append(
        "https://raw.githubusercontent.com/YDm-UA/babylon/main/", "carbon.glb",
        scene, function (newMeshes) {
//scene materials
    var SceneMat = new BABYLON.MultiMaterial('SceneMat', scene);
        SceneMat.subMaterials.push(scene.getMaterialByName("Alum_Profile"));    // 0
        SceneMat.subMaterials.push(scene.getMaterialByName("Fridge"));          // 1        
        SceneMat.subMaterials.push(scene.getMaterialByName("Black"));           // 2
        SceneMat.subMaterials.push(scene.getMaterialByName("Black_Glass"));     // 3
        SceneMat.subMaterials.push(scene.getMaterialByName("Blue"));            // 4
        SceneMat.subMaterials.push(scene.getMaterialByName("Bosch Cooktop"));   // 5        
        SceneMat.subMaterials.push(scene.getMaterialByName("Floor"));           // 6
        SceneMat.subMaterials.push(scene.getMaterialByName("Glass"));           // 7
        SceneMat.subMaterials.push(scene.getMaterialByName("Glass_Brown"));     // 8
        SceneMat.subMaterials.push(scene.getMaterialByName("Glass_Green"));     // 9
        SceneMat.subMaterials.push(scene.getMaterialByName("Grey"));            // 10
        SceneMat.subMaterials.push(scene.getMaterialByName("Handle"));          // 11
        SceneMat.subMaterials.push(scene.getMaterialByName("LED"));             // 12
        SceneMat.subMaterials.push(scene.getMaterialByName("Metal"));           // 13
        SceneMat.subMaterials.push(scene.getMaterialByName("Timber"));          // 14
        SceneMat.subMaterials.push(scene.getMaterialByName("White"));           // 15       
        SceneMat.subMaterials.push(scene.getMaterialByName("Yellow"));          // 16


// Room
    var Room = BABYLON.Mesh.MergeMeshes(
        [
            scene.getMeshByName("Room_primitive0"),
            scene.getMeshByName("Room_primitive1"),
            scene.getMeshByName("Room_primitive2"),
            scene.getMeshByName("Room_primitive3"),
            scene.getMeshByName("Room_primitive4"),
            scene.getMeshByName("Room_primitive5"),
            scene.getMeshByName("ELDoor_KDN")
            ], true, true, undefined, false, true);
        Room.material = SceneMat;
        Room.subMeshes[0].materialIndex = 15;
        Room.subMeshes[1].materialIndex = 6;
        Room.subMeshes[2].materialIndex = 2;
        Room.subMeshes[3].materialIndex = 16;
        Room.subMeshes[4].materialIndex = 10;
        Room.subMeshes[5].materialIndex = 4;
        Room.subMeshes[6].materialIndex = 2;
        Room.name = Room.id = "Room";

// ELDoor
    var ELDoor = BABYLON.Mesh.MergeMeshes(
        [
            scene.getMeshByName("ELDoor_primitive0"),
            scene.getMeshByName("ELDoor_primitive1"),
            scene.getMeshByName("ELDoor_primitive2")
            ], true, true, undefined, false, true);
        ELDoor.material = SceneMat;
        ELDoor.subMeshes[0].materialIndex = 14;
        ELDoor.subMeshes[1].materialIndex = 15;
        ELDoor.subMeshes[2].materialIndex = 2;
        ELDoor.name = ELDoor.id = "ELDoor";
        ELDoor.setPivotPoint(new BABYLON.Vector3(3585, 0, 20));

// ELDoor_Handle
    var ELDoor_Handle = BABYLON.Mesh.MergeMeshes(
        [
            scene.getMeshByName("ELdoor_Handle_primitive0"),
            scene.getMeshByName("ELdoor_Handle_primitive1")
            ], true, true, undefined, false, true);
        ELDoor_Handle.material = SceneMat;
        ELDoor_Handle.subMeshes[0].materialIndex = 2;
        ELDoor_Handle.subMeshes[1].materialIndex = 11;
        ELDoor_Handle.name = ELDoor_Handle.id = "ELDoor_Handle";
        ELDoor_Handle.parent=ELDoor;

// BAR_Cabinet
    var BAR_Cabinet = BABYLON.Mesh.MergeMeshes(
        [
            scene.getMeshByName("Bar_Cab"),
            scene.getMeshByName("BAR_Glass_Shelves"),
            scene.getMeshByName("BAR_Bottles_primitive0"),
            scene.getMeshByName("BAR_Bottles_primitive1"),
            scene.getMeshByName("BAR_Bottle_Holder")
            ], true, true, undefined, false, true);
        BAR_Cabinet.material = SceneMat;
        BAR_Cabinet.subMeshes[0].materialIndex = 14;
        BAR_Cabinet.subMeshes[1].materialIndex = 7;
        BAR_Cabinet.subMeshes[2].materialIndex = 9;
        BAR_Cabinet.subMeshes[3].materialIndex = 9;
        BAR_Cabinet.subMeshes[4].materialIndex = 10;
        BAR_Cabinet.name = BAR_Cabinet.id = "BAR_Cabinet";

// BAR_LDoor
    var BAR_LDoor = BABYLON.Mesh.MergeMeshes(
        [
            scene.getMeshByName("BAR_L_Door_BL"),
            scene.getMeshByName("BAR_L_Door_GL"),
            scene.getMeshByName("BAR_L_Door_GL_BL"),
            scene.getMeshByName("BAR_L_Door_Glasses")
            ], true, true, undefined, false, true);
        BAR_LDoor.material = SceneMat;
        BAR_LDoor.subMeshes[0].materialIndex = 2;
        BAR_LDoor.subMeshes[1].materialIndex = 7;
        BAR_LDoor.subMeshes[2].materialIndex = 3;
        BAR_LDoor.subMeshes[3].materialIndex = 7;
        BAR_LDoor.name = BAR_LDoor.id = "BAR_LDoor";
        BAR_LDoor.setPivotPoint(new BABYLON.Vector3(2350, 0, 40));
        
// BAR_RDoor
    var BAR_RDoor = BABYLON.Mesh.MergeMeshes(
        [
            scene.getMeshByName("BAR_R_Door_BL"),
            scene.getMeshByName("BAR_R_Door_GL"),
            scene.getMeshByName("BAR_R_Door_GL_BL"),
            scene.getMeshByName("BAR_R_Door_Glasses")
            ], true, true, undefined, false, true);
        BAR_RDoor.material = SceneMat;
        BAR_RDoor.subMeshes[0].materialIndex = 2;
        BAR_RDoor.subMeshes[1].materialIndex = 7;
        BAR_RDoor.subMeshes[2].materialIndex = 3;
        BAR_RDoor.subMeshes[3].materialIndex = 7;
        BAR_RDoor.name = BAR_RDoor.id = "BAR_RDoor";
        BAR_RDoor.setPivotPoint(new BABYLON.Vector3(1100,0,40));

// BAR_Shelf
    var BAR_Shelf = BABYLON.Mesh.MergeMeshes(
        [
            scene.getMeshByName("BAR_Shelf")
            ], true, true, undefined, false, true);
        BAR_Shelf.material = SceneMat;
        BAR_Shelf.subMeshes[0].materialIndex = 14;
        BAR_Shelf.name = BAR_Shelf.id = "BAR_Shelf";

// BAR_Drawer
    var BAR_Drawer = BABYLON.Mesh.MergeMeshes(
        [
            scene.getMeshByName("BAR_Drawer"),
            scene.getMeshByName("BAR_Drawer_Front")
            ], true, true, undefined, false, true);
        BAR_Drawer.material = SceneMat;
        BAR_Drawer.subMeshes[0].materialIndex = 10;
        BAR_Drawer.subMeshes[1].materialIndex = 14;
        BAR_Drawer.name = BAR_Drawer.id = "BAR_Drawer";

// BAR_AV_HK
    var BAR_AV_HK = BABYLON.Mesh.MergeMeshes(
        [
            scene.getMeshByName("BAR_AV")
            ], true, true, undefined, false, true);
        BAR_AV_HK.material = SceneMat;
        BAR_AV_HK.subMeshes[0].materialIndex = 14;
        BAR_AV_HK.name = BAR_AV_HK.id = "BAR_AV_HK";
        BAR_AV_HK.setPivotPoint(new BABYLON.Vector3(0,3000,0));

// KIT_Cabinets
    var KIT_Cabinets = BABYLON.Mesh.MergeMeshes(
        [
            scene.getMeshByName("KIT_Cabinet_primitive0"),
            scene.getMeshByName("KIT_Cabinet_primitive1"),
            scene.getMeshByName("KIT_Benchtop_primitive0"),
            scene.getMeshByName("KIT_Benchtop_primitive1"),
            scene.getMeshByName("KIT_Benchtop_primitive2"),
            scene.getMeshByName("KIT_Fridge"),
            scene.getMeshByName("KIT_Glass_Panels"),
            scene.getMeshByName("KIT_LED_primitive0"),
            scene.getMeshByName("KIT_LED_primitive1"),
            scene.getMeshByName("KIT_SL_EndPanel_primitive0"),
            scene.getMeshByName("KIT_SL_EndPanel_primitive1"),
            scene.getMeshByName("Wall_Panels")
            ], true, true, undefined, false, true);
        KIT_Cabinets.material = SceneMat;
        KIT_Cabinets.subMeshes[0].materialIndex = 2;
        KIT_Cabinets.subMeshes[1].materialIndex = 10;
        KIT_Cabinets.subMeshes[2].materialIndex = 2;
        KIT_Cabinets.subMeshes[3].materialIndex = 14;
        KIT_Cabinets.subMeshes[4].materialIndex = 13;
        KIT_Cabinets.subMeshes[5].materialIndex = 1;
        KIT_Cabinets.subMeshes[6].materialIndex = 3;
        KIT_Cabinets.subMeshes[7].materialIndex = 2;
        KIT_Cabinets.subMeshes[8].materialIndex = 12;
        KIT_Cabinets.subMeshes[9].materialIndex = 2;
        KIT_Cabinets.subMeshes[10].materialIndex = 14;
        KIT_Cabinets.subMeshes[11].materialIndex = 14;
        KIT_Cabinets.name = KIT_Cabinets.id = "KIT_Cabinets";


// KIT_TOP_01_AV_HK
    var KIT_TOP_01_AV_HK = BABYLON.Mesh.MergeMeshes(
        [
            scene.getMeshByName("KIT_TOP_01_AV")
            ], true, true, undefined, false, true);
        KIT_TOP_01_AV_HK.material = SceneMat;
        KIT_TOP_01_AV_HK.subMeshes[0].materialIndex = 14;
        KIT_TOP_01_AV_HK.name = KIT_TOP_01_AV_HK.id = "KIT_TOP_01_AV_HK";
        KIT_TOP_01_AV_HK.setPivotPoint(new BABYLON.Vector3(0,3000,0));

// KIT_TOP_02_AV_HK
    var KIT_TOP_02_AV_HK = BABYLON.Mesh.MergeMeshes(
        [
            scene.getMeshByName("KIT_TOP_02_AV")
            ], true, true, undefined, false, true);
        KIT_TOP_02_AV_HK.material = SceneMat;
        KIT_TOP_02_AV_HK.subMeshes[0].materialIndex = 14;
        KIT_TOP_02_AV_HK.name = KIT_TOP_02_AV_HK.id = "KIT_TOP_02_AV_HK";
        KIT_TOP_02_AV_HK.setPivotPoint(new BABYLON.Vector3(0,3000,0));

// KIT_TOP_03_AV_HK
    var KIT_TOP_03_AV_HK = BABYLON.Mesh.MergeMeshes(
        [
            scene.getMeshByName("KIT_TOP_03_AV")
            ], true, true, undefined, false, true);
        KIT_TOP_03_AV_HK.material = SceneMat;
        KIT_TOP_03_AV_HK.subMeshes[0].materialIndex = 14;
        KIT_TOP_03_AV_HK.name = KIT_TOP_03_AV_HK.id = "KIT_TOP_03_AV_HK";
        KIT_TOP_03_AV_HK.setPivotPoint(new BABYLON.Vector3(0,3000,0));        

// KIT_TOP_04_AV_HK
    var KIT_TOP_04_AV_HK = BABYLON.Mesh.MergeMeshes(
        [
            scene.getMeshByName("KIT_TOP_04_AV")
            ], true, true, undefined, false, true);
        KIT_TOP_04_AV_HK.material = SceneMat;
        KIT_TOP_04_AV_HK.subMeshes[0].materialIndex = 14;
        KIT_TOP_04_AV_HK.name = KIT_TOP_04_AV_HK.id = "KIT_TOP_04_AV_HK";
        KIT_TOP_04_AV_HK.setPivotPoint(new BABYLON.Vector3(0,3000,0));

// KIT_TOP_05_AV_HK
    var KIT_TOP_05_AV_HK = BABYLON.Mesh.MergeMeshes(
        [
            scene.getMeshByName("KIT_TOP_05_AV")
            ], true, true, undefined, false, true);
        KIT_TOP_05_AV_HK.material = SceneMat;
        KIT_TOP_05_AV_HK.subMeshes[0].materialIndex = 14;
        KIT_TOP_05_AV_HK.name = KIT_TOP_05_AV_HK.id = "KIT_TOP_05_AV_HK";
        KIT_TOP_05_AV_HK.setPivotPoint(new BABYLON.Vector3(0,3000,0));



// KIT_WC_01_AV_HF_Top
    var KIT_WC_01_AV_HF_Top = BABYLON.Mesh.MergeMeshes(
        [
            scene.getMeshByName("KIT_WC_01_AV_Front_Top")
            ], true, true, undefined, false, true);
        KIT_WC_01_AV_HF_Top.material = SceneMat;
        KIT_WC_01_AV_HF_Top.subMeshes[0].materialIndex = 14;
        KIT_WC_01_AV_HF_Top.name = KIT_WC_01_AV_HF_Top.id = "KIT_WC_01_AV_HF_Top";
        KIT_WC_01_AV_HF_Top.setPivotPoint(new BABYLON.Vector3(0,2098,-280));

        KIT_WC_01_AV_HF_Top.actionManager = new BABYLON.ActionManager(scene);
        KIT_WC_01_AV_HF_Top.actionManager.isRecursive = true;

    
       //HF_Top_Color
        var HF_Top_Color = new BABYLON.StandardMaterial("HF_Top_Color",scene);
        HF_Top_Color.diffuseColor = new BABYLON.Color3(1, 0, 0);
        var SphereT = BABYLON.MeshBuilder.CreateSphere("sphere", {diameter: 0, segments: 16}, scene);
        //SphereT.position.x=(KIT_WC_01_AV_HF_Top.getBoundingInfo().boundingBox.minimum.x)/2;
        SphereT.position.z=-280;
        SphereT.position.y = (1850);
        SphereT.parent=KIT_WC_01_AV_HF_Top;
        SphereT.material=HF_Top_Color;


// KIT_WC_01_AV_HF_Bot
    var KIT_WC_01_AV_HF_Bot = BABYLON.Mesh.MergeMeshes(
        [
            scene.getMeshByName("KIT_WC_01_AV_Front_Bot")
            ], true, true, undefined, false, true);
        KIT_WC_01_AV_HF_Bot.material = SceneMat;
        KIT_WC_01_AV_HF_Bot.subMeshes[0].materialIndex = 14;
        KIT_WC_01_AV_HF_Bot.name = KIT_WC_01_AV_HF_Bot.id = "KIT_WC_01_AV_HF_Bot";

    KIT_WC_01_AV_HF_Bot.position.z=280;
    KIT_WC_01_AV_HF_Bot.position.y=-1850;
	KIT_WC_01_AV_HF_Bot.parent=SphereT;
	var greenPivotAt = new BABYLON.Vector3(0, 1850, -240);
	KIT_WC_01_AV_HF_Bot.setPivotMatrix(BABYLON.Matrix.Translation(-greenPivotAt.x, -greenPivotAt.y, -greenPivotAt.z));

        
        //KIT_WC_01_AV_HF_Bot.parent=KIT_WC_01_AV_HF_Top;

            KIT_WC_01_AV_HF_Top.actionManager.registerAction(new BABYLON.ExecuteCodeAction(
                { trigger: BABYLON.ActionManager.OnPickDownTrigger },
                function() {
console.log("HFT sX "+KIT_WC_01_AV_HF_Top.getBoundingInfo().boundingBox.minimum.x);
console.log("HFT sY "+KIT_WC_01_AV_HF_Top.getBoundingInfo().boundingBox.minimum.y);
console.log("HFT sZ "+KIT_WC_01_AV_HF_Top.getBoundingInfo().boundingBox.minimum.z);

                    if (KIT_WC_01_AV_HF_Top.rotation.x==0)
            {
                BABYLON.Animation.CreateAndStartAnimation("KIT_WC_01_AV_HF_Top_Open", KIT_WC_01_AV_HF_Top, "rotation.x", 30, 60, Door_Closed, -HF_Top_Hinge, BABYLON.Animation.ANIMATIONLOOPMODE_CONSTANT);
                BABYLON.Animation.CreateAndStartAnimation("KIT_WC_01_AV_HF_Bot_Open", KIT_WC_01_AV_HF_Bot, "rotation.x", 30, 60, Door_Closed, HF_Bot_Hinge, BABYLON.Animation.ANIMATIONLOOPMODE_CONSTANT);
            }
            else
            {
                BABYLON.Animation.CreateAndStartAnimation("KIT_WC_01_AV_HF_Top_Close", KIT_WC_01_AV_HF_Top, "rotation.x", 30, 60, -HF_Top_Hinge, Door_Closed, BABYLON.Animation.ANIMATIONLOOPMODE_CONSTANT);
                BABYLON.Animation.CreateAndStartAnimation("KIT_WC_01_AV_HF_Bot_Close", KIT_WC_01_AV_HF_Bot, "rotation.x", 30, 60, HF_Bot_Hinge, Door_Closed, BABYLON.Animation.ANIMATIONLOOPMODE_CONSTANT);
            }
                }));



// KIT_WC_02_AV_HF_Top
    var KIT_WC_02_AV_HF_Top = BABYLON.Mesh.MergeMeshes(
        [
            scene.getMeshByName("KIT_WC_02_AV_Front_Top")
            ], true, true, undefined, false, true);
        KIT_WC_02_AV_HF_Top.material = SceneMat;
        KIT_WC_02_AV_HF_Top.subMeshes[0].materialIndex = 14;
        KIT_WC_02_AV_HF_Top.name = KIT_WC_02_AV_HF_Top.id = "KIT_WC_02_AV_HF_Top";
        KIT_WC_02_AV_HF_Top.setPivotPoint(new BABYLON.Vector3(0,2130,-290));

// KIT_WC_02_AV_HF_Bot
    var KIT_WC_02_AV_HF_Bot = BABYLON.Mesh.MergeMeshes(
        [
            scene.getMeshByName("KIT_WC_02_AV_Front_Bot")
            ], true, true, undefined, false, true);
        KIT_WC_02_AV_HF_Bot.material = SceneMat;
        KIT_WC_02_AV_HF_Bot.subMeshes[0].materialIndex = 14;
        KIT_WC_02_AV_HF_Bot.name = KIT_WC_02_AV_HF_Bot.id = "KIT_WC_02_AV_HF_Bot";
        KIT_WC_02_AV_HF_Bot.parent=KIT_WC_02_AV_HF_Top;        

// KIT_WC_03_AV_HF_Top
    var KIT_WC_03_AV_HF_Top = BABYLON.Mesh.MergeMeshes(
        [
            scene.getMeshByName("KIT_WC_03_AV_Front_Top")
            ], true, true, undefined, false, true);
        KIT_WC_03_AV_HF_Top.material = SceneMat;
        KIT_WC_03_AV_HF_Top.subMeshes[0].materialIndex = 14;
        KIT_WC_03_AV_HF_Top.name = KIT_WC_03_AV_HF_Top.id = "KIT_WC_03_AV_HF_Top";
        KIT_WC_03_AV_HF_Top.setPivotPoint(new BABYLON.Vector3(0,2130,-290));

// KIT_WC_03_AV_HF_Bot
    var KIT_WC_03_AV_HF_Bot = BABYLON.Mesh.MergeMeshes(
        [
            scene.getMeshByName("KIT_WC_03_AV_Front_Bot")
            ], true, true, undefined, false, true);
        KIT_WC_03_AV_HF_Bot.material = SceneMat;
        KIT_WC_03_AV_HF_Bot.subMeshes[0].materialIndex = 14;
        KIT_WC_03_AV_HF_Bot.name = KIT_WC_03_AV_HF_Bot.id = "KIT_WC_0_AV_HF_Bot";
        KIT_WC_03_AV_HF_Bot.parent=KIT_WC_03_AV_HF_Top;        



// KIT_Fridge_LDoor_Top
    var KIT_Fridge_LDoor_Top = BABYLON.Mesh.MergeMeshes(
        [
            scene.getMeshByName("KIT_Fridge_Door_Top_primitive0"),
            scene.getMeshByName("KIT_Fridge_Door_Top_primitive1")
            ], true, true, undefined, false, true);
        KIT_Fridge_LDoor_Top.material = SceneMat;
        KIT_Fridge_LDoor_Top.subMeshes[0].materialIndex = 14;
        KIT_Fridge_LDoor_Top.subMeshes[1].materialIndex = 15;
        KIT_Fridge_LDoor_Top.name = KIT_Fridge_LDoor_Top.id = "KIT_Fridge_LDoor_Top";
        KIT_Fridge_LDoor_Top.setPivotPoint(new BABYLON.Vector3(820, 0, 15));

// KIT_Fridge_LDoor_Bot
    var KIT_Fridge_LDoor_Bot = BABYLON.Mesh.MergeMeshes(
        [
            scene.getMeshByName("KIT_Fridge_Door._Bot_primitive0"),
            scene.getMeshByName("KIT_Fridge_Door._Bot_primitive1")
            ], true, true, undefined, false, true);
        KIT_Fridge_LDoor_Bot.material = SceneMat;
        KIT_Fridge_LDoor_Bot.subMeshes[0].materialIndex = 14;
        KIT_Fridge_LDoor_Bot.subMeshes[1].materialIndex = 15;
        KIT_Fridge_LDoor_Bot.name = KIT_Fridge_LDoor_Bot.id = "KIT_Fridge_LDoor_Bot";
        KIT_Fridge_LDoor_Bot.setPivotPoint(new BABYLON.Vector3(820, 0, 15));

// KIT_BL_01_Drawer
    var KIT_BL_01_Drawer = BABYLON.Mesh.MergeMeshes(
        [
            scene.getMeshByName("KIT_BL_01_Drawer_Carcass"),
            scene.getMeshByName("KIT_BL_01_Drawer_Front")
            ], true, true, undefined, false, true);
        KIT_BL_01_Drawer.material = SceneMat;
        KIT_BL_01_Drawer.subMeshes[0].materialIndex = 10;
        KIT_BL_01_Drawer.subMeshes[1].materialIndex = 14;
        KIT_BL_01_Drawer.name = KIT_BL_01_Drawer.id = "KIT_BL_01_Drawer";

// KIT_BL_02_Drawer
    var KIT_BL_02_Drawer = BABYLON.Mesh.MergeMeshes(
        [
            scene.getMeshByName("KIT_BL_02_Drawer_Carcass"),
            scene.getMeshByName("KIT_BL_02_Drawer_Front")
            ], true, true, undefined, false, true);
        KIT_BL_02_Drawer.material = SceneMat;
        KIT_BL_02_Drawer.subMeshes[0].materialIndex = 10;
        KIT_BL_02_Drawer.subMeshes[1].materialIndex = 14;
        KIT_BL_02_Drawer.name = KIT_BL_02_Drawer.id = "KIT_BL_02_Drawer";

// KIT_BL_03_Drawer
    var KIT_BL_03_Drawer = BABYLON.Mesh.MergeMeshes(
        [
            scene.getMeshByName("KIT_BL_03_Drawer_Carcass"),
            scene.getMeshByName("KIT_BL_03_Drawer_Front")
            ], true, true, undefined, false, true);
        KIT_BL_03_Drawer.material = SceneMat;
        KIT_BL_03_Drawer.subMeshes[0].materialIndex = 10;
        KIT_BL_03_Drawer.subMeshes[1].materialIndex = 14;
        KIT_BL_03_Drawer.name = KIT_BL_03_Drawer.id = "KIT_BL_03_Drawer";

// KIT_SL_01_Drawer
    var KIT_SL_01_Drawer = BABYLON.Mesh.MergeMeshes(
        [
            scene.getMeshByName("KIT_SL_01_Drawer_Carcass"),
            scene.getMeshByName("KIT_SL_01_Drawer_Front_primitive0"),
            scene.getMeshByName("KIT_SL_01_Drawer_Front_primitive1"),
            scene.getMeshByName("KIT_SL_01_Drawer_Front_Glass")

            ], true, true, undefined, false, true);
        KIT_SL_01_Drawer.material = SceneMat;
        KIT_SL_01_Drawer.subMeshes[0].materialIndex = 10;
        KIT_SL_01_Drawer.subMeshes[1].materialIndex = 2;
        KIT_SL_01_Drawer.subMeshes[2].materialIndex = 14;
        KIT_SL_01_Drawer.subMeshes[3].materialIndex = 3;
        KIT_SL_01_Drawer.name = KIT_SL_01_Drawer.id = "KIT_SL_01_Drawer";

// KIT_SL_02_Drawer
    var KIT_SL_02_Drawer = BABYLON.Mesh.MergeMeshes(
        [
            scene.getMeshByName("KIT_SL_02_Drawer_Carcass"),
            scene.getMeshByName("KIT_SL_02_Drawer_Front_primitive0"),
            scene.getMeshByName("KIT_SL_02_Drawer_Front_primitive1"),
            scene.getMeshByName("KIT_SL_02_Drawer_Front_Glass")

            ], true, true, undefined, false, true);
        KIT_SL_02_Drawer.material = SceneMat;
        KIT_SL_02_Drawer.subMeshes[0].materialIndex = 10;
        KIT_SL_02_Drawer.subMeshes[1].materialIndex = 2;
        KIT_SL_02_Drawer.subMeshes[2].materialIndex = 14;
        KIT_SL_02_Drawer.subMeshes[3].materialIndex = 3;
        KIT_SL_02_Drawer.name = KIT_SL_02_Drawer.id = "KIT_SL_02_Drawer";

// KIT_SL_03_Drawer
    var KIT_SL_03_Drawer = BABYLON.Mesh.MergeMeshes(
        [
            scene.getMeshByName("KIT_SL_03_Drawer_Carcass"),
            scene.getMeshByName("KIT_SL_03_Drawer_Front_primitive0"),
            scene.getMeshByName("KIT_SL_03_Drawer_Front_primitive1"),
            scene.getMeshByName("KIT_SL_03_Drawer_Front_Glass")

            ], true, true, undefined, false, true);
        KIT_SL_03_Drawer.material = SceneMat;
        KIT_SL_03_Drawer.subMeshes[0].materialIndex = 10;
        KIT_SL_03_Drawer.subMeshes[1].materialIndex = 2;
        KIT_SL_03_Drawer.subMeshes[2].materialIndex = 14;
        KIT_SL_03_Drawer.subMeshes[3].materialIndex = 3;
        KIT_SL_03_Drawer.name = KIT_SL_03_Drawer.id = "KIT_SL_03_Drawer";

// KIT_TC_RDoor_Bot
    var KIT_TC_RDoor_Bot = BABYLON.Mesh.MergeMeshes(
        [
            scene.getMeshByName("KIT_TC_RDoor_Bot")
            ], true, true, undefined, false, true);
        KIT_TC_RDoor_Bot.material = SceneMat;
        KIT_TC_RDoor_Bot.subMeshes[0].materialIndex = 14;
        KIT_TC_RDoor_Bot.name = KIT_TC_RDoor_Bot.id = "KIT_TC_RDoor_Bot";
        KIT_TC_RDoor_Bot.setPivotPoint(new BABYLON.Vector3(-3520,0,15));////

// KIT_TC_RDoor_Top
    var KIT_TC_RDoor_Top = BABYLON.Mesh.MergeMeshes(
        [
            scene.getMeshByName("KIT_TC_RDoor_Top")
            ], true, true, undefined, false, true);
        KIT_TC_RDoor_Top.material = SceneMat;
        KIT_TC_RDoor_Top.subMeshes[0].materialIndex = 14;
        KIT_TC_RDoor_Top.name = KIT_TC_RDoor_Top.id = "KIT_TC_RDoor_Top";
        KIT_TC_RDoor_Top.setPivotPoint(new BABYLON.Vector3(-3520,0,15));////


// KIT_TC_Drawer_Bot
    var KIT_TC_Drawer_Bot = BABYLON.Mesh.MergeMeshes(
        [
            scene.getMeshByName("KIT_TC_Drawer_Bot_Carcass"),
            scene.getMeshByName("KIT_TC_Drawer_Bot_Glass")
            ], true, true, undefined, false, true);
        KIT_TC_Drawer_Bot.material = SceneMat;
        KIT_TC_Drawer_Bot.subMeshes[0].materialIndex = 10;
        KIT_TC_Drawer_Bot.subMeshes[1].materialIndex = 7;
        KIT_TC_Drawer_Bot.name = KIT_TC_Drawer_Bot.id = "KIT_TC_Drawer_Bot";

// KIT_TC_Drawer_Center
    var KIT_TC_Drawer_Center = BABYLON.Mesh.MergeMeshes(
        [
            scene.getMeshByName("KIT_TC_Drawer_Center_Carcass"),
            scene.getMeshByName("KIT_TC_Drawer_Center_Glass")
            ], true, true, undefined, false, true);
        KIT_TC_Drawer_Center.material = SceneMat;
        KIT_TC_Drawer_Center.subMeshes[0].materialIndex = 10;
        KIT_TC_Drawer_Center.subMeshes[1].materialIndex = 7;
        KIT_TC_Drawer_Center.name = KIT_TC_Drawer_Center.id = "KIT_TC_Drawer_Center";

// KIT_TC_Drawer_Top
    var KIT_TC_Drawer_Top = BABYLON.Mesh.MergeMeshes(
        [
            scene.getMeshByName("KIT_TC_Drawer_Top_Carcass"),
            scene.getMeshByName("KIT_TC_Drawer_Top_Glass")
            ], true, true, undefined, false, true);
        KIT_TC_Drawer_Top.material = SceneMat;
        KIT_TC_Drawer_Top.subMeshes[0].materialIndex = 10;
        KIT_TC_Drawer_Top.subMeshes[1].materialIndex = 7;
        KIT_TC_Drawer_Top.name = KIT_TC_Drawer_Top.id = "KIT_TC_Drawer_Top";

// AIR_01_LDoor
    var AIR_01_LDoor = BABYLON.Mesh.MergeMeshes(
        [
            scene.getMeshByName("AIR_L_LDoorAlum"),
            scene.getMeshByName("AIR_L_LDoorGlass")
            ], true, true, undefined, false, true);
        AIR_01_LDoor.material = SceneMat;
        AIR_01_LDoor.subMeshes[0].materialIndex = 0;
        AIR_01_LDoor.subMeshes[1].materialIndex = 8;
        AIR_01_LDoor.name = AIR_01_LDoor.id = "AIR_01_LDoor";
        AIR_01_LDoor.setPivotPoint(new BABYLON.Vector3(-3800, 0, 20));
        
// AIR_Cabinet
    var AIR_Cabinet = BABYLON.Mesh.MergeMeshes(
        [
            scene.getMeshByName("AIR_Alum"),
            scene.getMeshByName("AIR_Glass"),
            scene.getMeshByName("AIR_Timber")
            ], true, true, undefined, false, true);
        AIR_Cabinet.material = SceneMat;
        AIR_Cabinet.subMeshes[0].materialIndex = 0;
        AIR_Cabinet.subMeshes[1].materialIndex = 7;
        AIR_Cabinet.subMeshes[2].materialIndex = 14;
        AIR_Cabinet.name = AIR_Cabinet.id = "AIR_Cabinet";
               

// AIR_01_RDoor
    var AIR_01_RDoor = BABYLON.Mesh.MergeMeshes(
        [
            scene.getMeshByName("AIR_L_RDoorAlum"),
            scene.getMeshByName("AIR_L_RDoorGlass")
            ], true, true, undefined, false, true);
        AIR_01_RDoor.material = SceneMat;
        AIR_01_RDoor.subMeshes[0].materialIndex = 0;
        AIR_01_RDoor.subMeshes[1].materialIndex = 8;
        AIR_01_RDoor.name = AIR_01_RDoor.id = "AIR_01_RDoor";
        AIR_01_RDoor.setPivotPoint(new BABYLON.Vector3(-4800, 0, 20));


// AIR_02_LDoor
    var AIR_02_LDoor = BABYLON.Mesh.MergeMeshes(
        [
            scene.getMeshByName("AIR_R_LDoorAlum"),
            scene.getMeshByName("AIR_R_LDoorGlass")
            ], true, true, undefined, false, true);
        AIR_02_LDoor.material = SceneMat;
        AIR_02_LDoor.subMeshes[0].materialIndex = 0;
        AIR_02_LDoor.subMeshes[1].materialIndex = 8;
        AIR_02_LDoor.name = AIR_02_LDoor.id = "AIR_02_LDoor";
        AIR_02_LDoor.setPivotPoint(new BABYLON.Vector3(-4820, 0, 0));
        
               
// AIR_02_RDoor
    var AIR_02_RDoor = BABYLON.Mesh.MergeMeshes(
        [
            scene.getMeshByName("AIR_R_RDoorAlum"),
            scene.getMeshByName("AIR_R_RDoorGlass")
            ], true, true, undefined, false, true);
        AIR_02_RDoor.material = SceneMat;
        AIR_02_RDoor.subMeshes[0].materialIndex = 0;
        AIR_02_RDoor.subMeshes[1].materialIndex = 8;
        AIR_02_RDoor.name = AIR_02_RDoor.id = "AIR_02_RDoor";
        AIR_02_RDoor.setPivotPoint(new BABYLON.Vector3(-5800, 0, 0));


// IS_Cabinets
    var IS_Cabinets = BABYLON.Mesh.MergeMeshes(
        [
            scene.getMeshByName("IS_Benchtop_primitive0"),
            scene.getMeshByName("IS_Benchtop_primitive1"),
            scene.getMeshByName("IS_Benchtop_primitive2"),
            scene.getMeshByName("IS_Cabinets_primitive0"),
            scene.getMeshByName("IS_Cabinets_primitive1"),
            scene.getMeshByName("IS_SL_End_Panels_primitive0"),
            scene.getMeshByName("IS_SL_End_Panels_primitive1"),
            scene.getMeshByName("IS_SL_End_Panels_primitive2"),
            scene.getMeshByName("IS_Timber_Panels")
            ], true, true, undefined, false, true);
        IS_Cabinets.material = SceneMat;
        IS_Cabinets.subMeshes[0].materialIndex = 2;
        IS_Cabinets.subMeshes[1].materialIndex = 14;
        IS_Cabinets.subMeshes[2].materialIndex = 5;
        IS_Cabinets.subMeshes[3].materialIndex = 2;
        IS_Cabinets.subMeshes[4].materialIndex = 10;
        IS_Cabinets.subMeshes[5].materialIndex = 3;
        IS_Cabinets.subMeshes[6].materialIndex = 2;
        IS_Cabinets.subMeshes[7].materialIndex = 14;
        IS_Cabinets.subMeshes[8].materialIndex = 14;
        IS_Cabinets.name = IS_Cabinets.id = "IS_Cabinets";










// IS_BL_01_Drawer
    var IS_BL_01_Drawer = BABYLON.Mesh.MergeMeshes(
        [
            scene.getMeshByName("IS_BL_01_Drawer_Carcass"),
            scene.getMeshByName("IS_BL_01_Drawer_Front")
            ], true, true, undefined, false, true);
        IS_BL_01_Drawer.material = SceneMat;
        IS_BL_01_Drawer.subMeshes[0].materialIndex = 10;
        IS_BL_01_Drawer.subMeshes[1].materialIndex = 14;
        IS_BL_01_Drawer.name = IS_BL_01_Drawer.id = "IS_BL_01_Drawer";
		
// IS_BL_02_Drawer
    var IS_BL_02_Drawer = BABYLON.Mesh.MergeMeshes(
        [
            scene.getMeshByName("IS_BL_02_Drawer_Carcass"),
            scene.getMeshByName("IS_BL_02_Drawer_Front")
            ], true, true, undefined, false, true);
        IS_BL_02_Drawer.material = SceneMat;
        IS_BL_02_Drawer.subMeshes[0].materialIndex = 10;
        IS_BL_02_Drawer.subMeshes[1].materialIndex = 14;
        IS_BL_02_Drawer.name = IS_BL_02_Drawer.id = "IS_BL_02_Drawer";
		
// IS_BL_03_Drawer
    var IS_BL_03_Drawer = BABYLON.Mesh.MergeMeshes(
        [
            scene.getMeshByName("IS_BL_03_Drawer_Carcass"),
            scene.getMeshByName("IS_BL_03_Drawer_Front")
            ], true, true, undefined, false, true);
        IS_BL_03_Drawer.material = SceneMat;
        IS_BL_03_Drawer.subMeshes[0].materialIndex = 10;
        IS_BL_03_Drawer.subMeshes[1].materialIndex = 14;
        IS_BL_03_Drawer.name = IS_BL_03_Drawer.id = "IS_BL_03_Drawer";		

// IS_SL_01_Drawer
    var IS_SL_01_Drawer = BABYLON.Mesh.MergeMeshes(
        [
            scene.getMeshByName("IS_SL_01_Drawer_Carcass"),
            scene.getMeshByName("IS_SL_01_Drawer_Front_primitive0"),
            scene.getMeshByName("IS_SL_01_Drawer_Front_primitive1"),
            scene.getMeshByName("IS_SL_01_Drawer_Front_Glass")
            ], true, true, undefined, false, true);
        IS_SL_01_Drawer.material = SceneMat;
        IS_SL_01_Drawer.subMeshes[0].materialIndex = 10;
        IS_SL_01_Drawer.subMeshes[1].materialIndex = 2;
        IS_SL_01_Drawer.subMeshes[2].materialIndex = 14;
        IS_SL_01_Drawer.subMeshes[3].materialIndex = 3;
        IS_SL_01_Drawer.name = IS_SL_01_Drawer.id = "IS_SL_01_Drawer";

// IS_SL_02_Drawer
    var IS_SL_02_Drawer = BABYLON.Mesh.MergeMeshes(
        [
            scene.getMeshByName("IS_SL_02_Drawer_Carcass"),
            scene.getMeshByName("IS_SL_02_Drawer_Front_primitive0"),
            scene.getMeshByName("IS_SL_02_Drawer_Front_primitive1"),
            scene.getMeshByName("IS_SL_02_Drawer_Front_Glass")
            ], true, true, undefined, false, true);
        IS_SL_02_Drawer.material = SceneMat;
        IS_SL_02_Drawer.subMeshes[0].materialIndex = 10;
        IS_SL_02_Drawer.subMeshes[1].materialIndex = 2;
        IS_SL_02_Drawer.subMeshes[2].materialIndex = 14;
        IS_SL_02_Drawer.subMeshes[3].materialIndex = 3;
        IS_SL_02_Drawer.name = IS_SL_02_Drawer.id = "IS_SL_02_Drawer";

// IS_SL_03_Drawer
    var IS_SL_03_Drawer = BABYLON.Mesh.MergeMeshes(
        [
            scene.getMeshByName("IS_SL_03_Drawer_Carcass"),
            scene.getMeshByName("IS_SL_03_Drawer_Front_primitive0"),
            scene.getMeshByName("IS_SL_03_Drawer_Front_primitive1"),
            scene.getMeshByName("IS_SL_03_Drawer_Front_Glass")
            ], true, true, undefined, false, true);
        IS_SL_03_Drawer.material = SceneMat;
        IS_SL_03_Drawer.subMeshes[0].materialIndex = 10;
        IS_SL_03_Drawer.subMeshes[1].materialIndex = 2;
        IS_SL_03_Drawer.subMeshes[2].materialIndex = 14;
        IS_SL_03_Drawer.subMeshes[3].materialIndex = 3;
        IS_SL_03_Drawer.name = IS_SL_03_Drawer.id = "IS_SL_03_Drawer";

// IS_SL_04_Drawer
    var IS_SL_04_Drawer = BABYLON.Mesh.MergeMeshes(
        [
            scene.getMeshByName("IS_SL_04_Drawer_Carcass"),
            scene.getMeshByName("IS_SL_04_Drawer_Front_primitive0"),
            scene.getMeshByName("IS_SL_04_Drawer_Front_primitive1"),
            scene.getMeshByName("IS_SL_04_Drawer_Front_Glass")
            ], true, true, undefined, false, true);
        IS_SL_04_Drawer.material = SceneMat;
        IS_SL_04_Drawer.subMeshes[0].materialIndex = 10;
        IS_SL_04_Drawer.subMeshes[1].materialIndex = 2;
        IS_SL_04_Drawer.subMeshes[2].materialIndex = 14;
        IS_SL_04_Drawer.subMeshes[3].materialIndex = 3;
        IS_SL_04_Drawer.name = IS_SL_04_Drawer.id = "IS_SL_04_Drawer";

// IS_SL_05_Drawer
    var IS_SL_05_Drawer = BABYLON.Mesh.MergeMeshes(
        [
            scene.getMeshByName("IS_SL_05_Drawer_Carcass"),
            scene.getMeshByName("IS_SL_05_Drawer_Front_primitive0"),
            scene.getMeshByName("IS_SL_05_Drawer_Front_primitive1"),
            scene.getMeshByName("IS_SL_05_Drawer_Front_Glass")
            ], true, true, undefined, false, true);
        IS_SL_05_Drawer.material = SceneMat;
        IS_SL_05_Drawer.subMeshes[0].materialIndex = 10;
        IS_SL_05_Drawer.subMeshes[1].materialIndex = 2;
        IS_SL_05_Drawer.subMeshes[2].materialIndex = 14;
        IS_SL_05_Drawer.subMeshes[3].materialIndex = 3;
        IS_SL_05_Drawer.name = IS_SL_05_Drawer.id = "IS_SL_05_Drawer";

// IS_SL_06_Drawer
    var IS_SL_06_Drawer = BABYLON.Mesh.MergeMeshes(
        [
            scene.getMeshByName("IS_SL_06_Drawer_Carcass"),
            scene.getMeshByName("IS_SL_06_Drawer_Front_primitive0"),
            scene.getMeshByName("IS_SL_06_Drawer_Front_primitive1"),
            scene.getMeshByName("IS_SL_06_Drawer_Front_Glass")
            ], true, true, undefined, false, true);
        IS_SL_06_Drawer.material = SceneMat;
        IS_SL_06_Drawer.subMeshes[0].materialIndex = 10;
        IS_SL_06_Drawer.subMeshes[1].materialIndex = 2;
        IS_SL_06_Drawer.subMeshes[2].materialIndex = 14;
        IS_SL_06_Drawer.subMeshes[3].materialIndex = 3;
        IS_SL_06_Drawer.name = IS_SL_06_Drawer.id = "IS_SL_06_Drawer";


//--//
    });




//scene camera and light
        scene.createDefaultCameraOrLight(true);
        scene.activeCamera.attachControl(canvas, false);
        scene.activeCamera.alpha += 0.1+Math.PI; // camera +180°
        camera.minZ = 1;
        camera.maxZ = 50000;
        camera.wheelPrecision=0.1;
        scene.clipPlane = null;
        camera.setPosition(new BABYLON.Vector3(-9500, 9500, 9500));
        scene.clearColor = new BABYLON.Color3(0.99, 0.99, 0.99);    
        //scene.camera.attachControl(AIR_Alum, true);
        //camera.setTarget(scene.getMeshByName("AIR_Cabinet"));
        camera.angularSensibility = 10;
        camera.moveSensibility = 10;
        //camera.setTarget(new BABYLON.Vector3(-2, 4, 3));
        camera.attachControl(canvas, true);
	
var pipeline = new BABYLON.DefaultRenderingPipeline(
    "defaultPipeline", // The name of the pipeline
    true, // Do you want the pipeline to use HDR texture?
    scene, // The scene instance
    [camera] // The list of cameras to be attached to
);
	pipeline.samples = 16;
	pipeline.fxaaEnabled = true;	

    scene.onPointerPick = function (evt, pickInfo) {
        if (pickInfo.hit) {
            if (pickInfo.pickedMesh != null)
            {
                console.log(pickInfo.pickedMesh.name);
                 //console.log("size"+pickInfo.pickedMesh.getBoundingInfo().boundingBox.extendSize);
                 //console.log("pivot"+pickInfo.pickedMesh.getPivotPoint());
////


// ELDoor Animation
	if (pickInfo.pickedMesh.name=="ELDoor")
		{
            if (pickInfo.pickedMesh.rotation.y==0)
            {
                BABYLON.Animation.CreateAndStartAnimation("ELDoor_Open", pickInfo.pickedMesh, "rotation.y", 30, 60, Door_Closed, ELDoor_Opened, BABYLON.Animation.ANIMATIONLOOPMODE_CONSTANT);
            }
            else
            {
                BABYLON.Animation.CreateAndStartAnimation("ELDoor_Close", pickInfo.pickedMesh, "rotation.y", 30, 60, ELDoor_Opened, -Door_Closed, BABYLON.Animation.ANIMATIONLOOPMODE_CONSTANT);
            }
		}




// BAR_LDoor Animation
	if (pickInfo.pickedMesh.name=="BAR_LDoor")
		{
            if (BSSS==0)
            {
            if (pickInfo.pickedMesh.rotation.y==0)
            {
                BABYLON.Animation.CreateAndStartAnimation("BAR_LDoor_Open", pickInfo.pickedMesh, "rotation.y", 30, 30, Door_Closed, BAR_Door_Opened, BABYLON.Animation.ANIMATIONLOOPMODE_CONSTANT);
                BLDS=1;
            }
            else
            {
                BABYLON.Animation.CreateAndStartAnimation("BAR_LDoor_Close", pickInfo.pickedMesh, "rotation.y", 30, 30, BAR_Door_Opened, -Door_Closed, BABYLON.Animation.ANIMATIONLOOPMODE_CONSTANT);
                BLDS=0;
            }
            }
		}


// BAR_RDoor Animation
	if (pickInfo.pickedMesh.name=="BAR_RDoor")
		{
            if (BSSS==0)
            {                
                if (pickInfo.pickedMesh.rotation.y==0)
                {
                BABYLON.Animation.CreateAndStartAnimation("BAR_RDoor_Open", pickInfo.pickedMesh, "rotation.y", 30, 30, Door_Closed, -BAR_Door_Opened, BABYLON.Animation.ANIMATIONLOOPMODE_CONSTANT);
                BRDS=1;
                }
            else
                {
                BABYLON.Animation.CreateAndStartAnimation("BAR_RDoor_Close", pickInfo.pickedMesh, "rotation.y", 30, 30, -BAR_Door_Opened, Door_Closed, BABYLON.Animation.ANIMATIONLOOPMODE_CONSTANT);
                BRDS=0;
                }
            }
		}

// BAR_Shelf Animation
	if (pickInfo.pickedMesh.name=="BAR_Shelf")
		{
            if (pickInfo.pickedMesh.position.z==0)
            {

                if (BLDS==1 & BRDS==1)
                {
                BABYLON.Animation.CreateAndStartAnimation("BAR_Shelf_Open", pickInfo.pickedMesh, "position.z", 30, 30, Drawer_Closed, Drawer600_Opened, BABYLON.Animation.ANIMATIONLOOPMODE_CONSTANT);
                BSSS=1;
                }
            }
            else
            {
                BABYLON.Animation.CreateAndStartAnimation("BAR_Shelf_Close", pickInfo.pickedMesh, "position.z", 30, 30, Drawer600_Opened, Drawer_Closed, BABYLON.Animation.ANIMATIONLOOPMODE_CONSTANT);
                BSSS=0;
            }
		}


// BAR_Drawer Animation
	if (pickInfo.pickedMesh.name=="BAR_Drawer")
		{
            if (pickInfo.pickedMesh.position.z==0)
            {
                BABYLON.Animation.CreateAndStartAnimation("BAR_Drawer_Open", pickInfo.pickedMesh, "position.z", 30, 30, Drawer_Closed, Drawer600_Opened, BABYLON.Animation.ANIMATIONLOOPMODE_CONSTANT);
            }
            else
            {
                BABYLON.Animation.CreateAndStartAnimation("BAR_Drawer_Close", pickInfo.pickedMesh, "position.z", 30, 30, Drawer600_Opened, Drawer_Closed, BABYLON.Animation.ANIMATIONLOOPMODE_CONSTANT);
            }
        }
		

// BAR_AV_HK Animation
	if (pickInfo.pickedMesh.name=="BAR_AV_HK")
		{
            if (pickInfo.pickedMesh.rotation.x==0)
            {
                BABYLON.Animation.CreateAndStartAnimation("BAR_AV_HK_Open", pickInfo.pickedMesh, "rotation.x", 30, 30, Door_Closed, -AV_HK_Opened, BABYLON.Animation.ANIMATIONLOOPMODE_CONSTANT);
            }
            else
            {
                BABYLON.Animation.CreateAndStartAnimation("BAR_AV_HK_Close", pickInfo.pickedMesh, "rotation.x", 30, 30, -AV_HK_Opened, Door_Closed, BABYLON.Animation.ANIMATIONLOOPMODE_CONSTANT);
            }
        }


// KIT_TOP_01_AV_HK Animation
	if (pickInfo.pickedMesh.name=="KIT_TOP_01_AV_HK")
		{
            if (pickInfo.pickedMesh.rotation.x==0)
            {
                BABYLON.Animation.CreateAndStartAnimation("KIT_TOP_01_AV_HK_Open", pickInfo.pickedMesh, "rotation.x", 30, 30, Door_Closed, -AV_HK_Opened, BABYLON.Animation.ANIMATIONLOOPMODE_CONSTANT);
            }
            else
            {
                BABYLON.Animation.CreateAndStartAnimation("KIT_TOP_01_AV_HK_Close", pickInfo.pickedMesh, "rotation.x", 30, 30, -AV_HK_Opened, Door_Closed, BABYLON.Animation.ANIMATIONLOOPMODE_CONSTANT);
            }
        }

// KIT_TOP_02_AV_HK Animation
	if (pickInfo.pickedMesh.name=="KIT_TOP_02_AV_HK")
		{
            if (pickInfo.pickedMesh.rotation.x==0)
            {
                BABYLON.Animation.CreateAndStartAnimation("KIT_TOP_02_AV_HK_Open", pickInfo.pickedMesh, "rotation.x", 30, 30, Door_Closed, -AV_HK_Opened, BABYLON.Animation.ANIMATIONLOOPMODE_CONSTANT);
            }
            else
            {
                BABYLON.Animation.CreateAndStartAnimation("KIT_TOP_02_AV_HK_Close", pickInfo.pickedMesh, "rotation.x", 30, 30, -AV_HK_Opened, Door_Closed, BABYLON.Animation.ANIMATIONLOOPMODE_CONSTANT);
            }
        }

// KIT_TOP_03_AV_HK Animation
	if (pickInfo.pickedMesh.name=="KIT_TOP_03_AV_HK")
		{
            if (pickInfo.pickedMesh.rotation.x==0)
            {
                BABYLON.Animation.CreateAndStartAnimation("KIT_TOP_03_AV_HK_Open", pickInfo.pickedMesh, "rotation.x", 30, 30, Door_Closed, -AV_HK_Opened, BABYLON.Animation.ANIMATIONLOOPMODE_CONSTANT);
            }
            else
            {
                BABYLON.Animation.CreateAndStartAnimation("KIT_TOP_03_AV_HK_Close", pickInfo.pickedMesh, "rotation.x", 30, 30, -AV_HK_Opened, Door_Closed, BABYLON.Animation.ANIMATIONLOOPMODE_CONSTANT);
            }
        }

// KIT_TOP_04_AV_HK Animation
	if (pickInfo.pickedMesh.name=="KIT_TOP_04_AV_HK")
		{
            if (pickInfo.pickedMesh.rotation.x==0)
            {
                BABYLON.Animation.CreateAndStartAnimation("KIT_TOP_04_AV_HK_Open", pickInfo.pickedMesh, "rotation.x", 30, 30, Door_Closed, -AV_HK_Opened, BABYLON.Animation.ANIMATIONLOOPMODE_CONSTANT);
            }
            else
            {
                BABYLON.Animation.CreateAndStartAnimation("KIT_TOP_04_AV_HK_Close", pickInfo.pickedMesh, "rotation.x", 30, 30, -AV_HK_Opened, Door_Closed, BABYLON.Animation.ANIMATIONLOOPMODE_CONSTANT);
            }
        }

// KIT_TOP_05_AV_HK Animation
	if (pickInfo.pickedMesh.name=="KIT_TOP_05_AV_HK")
		{
            if (pickInfo.pickedMesh.rotation.x==0)
            {
                BABYLON.Animation.CreateAndStartAnimation("KIT_TOP_05_AV_HK_Open", pickInfo.pickedMesh, "rotation.x", 30, 30, Door_Closed, -AV_HK_Opened, BABYLON.Animation.ANIMATIONLOOPMODE_CONSTANT);
            }
            else
            {
                BABYLON.Animation.CreateAndStartAnimation("KIT_TOP_05_AV_HK_Close", pickInfo.pickedMesh, "rotation.x", 30, 30, -AV_HK_Opened, Door_Closed, BABYLON.Animation.ANIMATIONLOOPMODE_CONSTANT);
            }
        }


// KIT_WC_01_AV_HF_Top Animation
//	if (pickInfo.pickedMesh.name=="KIT_WC_01_AV_HF_Top")
//		{
//            if (pickInfo.pickedMesh.rotation.x==0)
//            {
//                BABYLON.Animation.CreateAndStartAnimation("KIT_WC_01_AV_HF_Top_Top_Open", pickInfo.pickedMesh, "rotation.x", 30, 30, Door_Closed, -AV_HF_Opened, BABYLON.Animation.ANIMATIONLOOPMODE_CONSTANT);
//            }
//            else
//            {
//                BABYLON.Animation.CreateAndStartAnimation("KIT_WC_01_AV_HF_Top_Top_Close", pickInfo.pickedMesh, "rotation.x", 30, 30, -AV_HF_Opened, Door_Closed, BABYLON.Animation.ANIMATIONLOOPMODE_CONSTANT);
//            }
//        }

// KIT_WC_02_AV_HF_Top Animation
	if (pickInfo.pickedMesh.name=="KIT_WC_02_AV_HF_Top")
		{
            if (pickInfo.pickedMesh.rotation.x==0)
            {
                BABYLON.Animation.CreateAndStartAnimation("KIT_WC_02_AV_HF_Top_Top_Open", pickInfo.pickedMesh, "rotation.x", 30, 30, Door_Closed, -AV_HF_Opened, BABYLON.Animation.ANIMATIONLOOPMODE_CONSTANT);
            }
            else
            {
                BABYLON.Animation.CreateAndStartAnimation("KIT_WC_02_AV_HF_Top_Top_Close", pickInfo.pickedMesh, "rotation.x", 30, 30, -AV_HF_Opened, Door_Closed, BABYLON.Animation.ANIMATIONLOOPMODE_CONSTANT);
            }
        }

// KIT_WC_03_AV_HF_Top Animation
	if (pickInfo.pickedMesh.name=="KIT_WC_03_AV_HF_Top")
		{
            if (pickInfo.pickedMesh.rotation.x==0)
            {
                BABYLON.Animation.CreateAndStartAnimation("KIT_WC_03_AV_HF_Top_Top_Open", pickInfo.pickedMesh, "rotation.x", 30, 30, Door_Closed, -AV_HF_Opened, BABYLON.Animation.ANIMATIONLOOPMODE_CONSTANT);
            }
            else
            {
                BABYLON.Animation.CreateAndStartAnimation("KIT_WC_03_AV_HF_Top_Top_Close", pickInfo.pickedMesh, "rotation.x", 30, 30, -AV_HF_Opened, Door_Closed, BABYLON.Animation.ANIMATIONLOOPMODE_CONSTANT);
            }
        }


// KIT_Fridge_LDoor_Top Animation
	if (pickInfo.pickedMesh.name=="KIT_Fridge_LDoor_Top")
		{
            if (pickInfo.pickedMesh.rotation.y==0)
            {
                BABYLON.Animation.CreateAndStartAnimation("KIT_Fridge_LDoor_Top_Open", pickInfo.pickedMesh, "rotation.y", 30, 30, Door_Closed, Door_Opened, BABYLON.Animation.ANIMATIONLOOPMODE_CONSTANT);
            }
            else
            {
                BABYLON.Animation.CreateAndStartAnimation("KIT_Fridge_LDoor_Top_Close", pickInfo.pickedMesh, "rotation.y", 30, 30, Door_Opened, -Door_Closed, BABYLON.Animation.ANIMATIONLOOPMODE_CONSTANT);
            }
		}

// KIT_Fridge_LDoor_Bot Animation
	if (pickInfo.pickedMesh.name=="KIT_Fridge_LDoor_Bot")
		{
            if (pickInfo.pickedMesh.rotation.y==0)
            {
                BABYLON.Animation.CreateAndStartAnimation("KIT_Fridge_LDoor_Bot_Open", pickInfo.pickedMesh, "rotation.y", 30, 30, Door_Closed, Door_Opened, BABYLON.Animation.ANIMATIONLOOPMODE_CONSTANT);
            }
            else
            {
                BABYLON.Animation.CreateAndStartAnimation("KIT_Fridge_LDoor_Bot_Close", pickInfo.pickedMesh, "rotation.y", 30, 30, Door_Opened, -Door_Closed, BABYLON.Animation.ANIMATIONLOOPMODE_CONSTANT);
            }
		}

// KIT_BL_01_Drawer Animation
	if (pickInfo.pickedMesh.name=="KIT_BL_01_Drawer")
		{
            if (pickInfo.pickedMesh.position.z==0)
            {
                BABYLON.Animation.CreateAndStartAnimation("KIT_BL_01_Drawer_Open", pickInfo.pickedMesh, "position.z", 30, 30, Drawer_Closed, Drawer600_Opened, BABYLON.Animation.ANIMATIONLOOPMODE_CONSTANT);
            }
            else
            {
                BABYLON.Animation.CreateAndStartAnimation("KIT_BL_01_Drawer_Close", pickInfo.pickedMesh, "position.z", 30, 30, Drawer600_Opened, Drawer_Closed, BABYLON.Animation.ANIMATIONLOOPMODE_CONSTANT);
            }
        }

// KIT_BL_02_Drawer Animation
	if (pickInfo.pickedMesh.name=="KIT_BL_02_Drawer")
		{
            if (pickInfo.pickedMesh.position.z==0)
            {
                BABYLON.Animation.CreateAndStartAnimation("KIT_BL_02_Drawer_Open", pickInfo.pickedMesh, "position.z", 30, 30, Drawer_Closed, Drawer600_Opened, BABYLON.Animation.ANIMATIONLOOPMODE_CONSTANT);
            }
            else
            {
                BABYLON.Animation.CreateAndStartAnimation("KIT_BL_02_Drawer_Close", pickInfo.pickedMesh, "position.z", 30, 30, Drawer600_Opened, Drawer_Closed, BABYLON.Animation.ANIMATIONLOOPMODE_CONSTANT);
            }
        }

// KIT_BL_03_Drawer Animation
	if (pickInfo.pickedMesh.name=="KIT_BL_03_Drawer")
		{
            if (pickInfo.pickedMesh.position.z==0)
            {
                BABYLON.Animation.CreateAndStartAnimation("KIT_BL_03_Drawer_Open", pickInfo.pickedMesh, "position.z", 30, 30, Drawer_Closed, Drawer600_Opened, BABYLON.Animation.ANIMATIONLOOPMODE_CONSTANT);
            }
            else
            {
                BABYLON.Animation.CreateAndStartAnimation("KIT_BL_03_Drawer_Close", pickInfo.pickedMesh, "position.z", 30, 30, Drawer600_Opened, Drawer_Closed, BABYLON.Animation.ANIMATIONLOOPMODE_CONSTANT);
            }
        }        

// KIT_SL_01_Drawer Animation
	if (pickInfo.pickedMesh.name=="KIT_SL_01_Drawer")
		{
            if (pickInfo.pickedMesh.position.z==0)
            {
                BABYLON.Animation.CreateAndStartAnimation("KIT_SL_01_Drawer_Open", pickInfo.pickedMesh, "position.z", 30, 30, Drawer_Closed, Drawer600_Opened, BABYLON.Animation.ANIMATIONLOOPMODE_CONSTANT);
            }
            else
            {
                BABYLON.Animation.CreateAndStartAnimation("KIT_SL_01_Drawer_Close", pickInfo.pickedMesh, "position.z", 30, 30, Drawer600_Opened, Drawer_Closed, BABYLON.Animation.ANIMATIONLOOPMODE_CONSTANT);
            }
        }

// KIT_SL_02_Drawer Animation
	if (pickInfo.pickedMesh.name=="KIT_SL_02_Drawer")
		{
            if (pickInfo.pickedMesh.position.z==0)
            {
                BABYLON.Animation.CreateAndStartAnimation("KIT_SL_02_Drawer_Open", pickInfo.pickedMesh, "position.z", 30, 30, Drawer_Closed, Drawer600_Opened, BABYLON.Animation.ANIMATIONLOOPMODE_CONSTANT);
            }
            else
            {
                BABYLON.Animation.CreateAndStartAnimation("KIT_SL_02_Drawer_Close", pickInfo.pickedMesh, "position.z", 30, 30, Drawer600_Opened, Drawer_Closed, BABYLON.Animation.ANIMATIONLOOPMODE_CONSTANT);
            }
        }

// KIT_SL_03_Drawer Animation
	if (pickInfo.pickedMesh.name=="KIT_SL_03_Drawer")
		{
            if (pickInfo.pickedMesh.position.z==0)
            {
                BABYLON.Animation.CreateAndStartAnimation("KIT_SL_03_Drawer_Open", pickInfo.pickedMesh, "position.z", 30, 30, Drawer_Closed, Drawer600_Opened, BABYLON.Animation.ANIMATIONLOOPMODE_CONSTANT);
            }
            else
            {
                BABYLON.Animation.CreateAndStartAnimation("KIT_SL_03_Drawer_Close", pickInfo.pickedMesh, "position.z", 30, 30, Drawer600_Opened, Drawer_Closed, BABYLON.Animation.ANIMATIONLOOPMODE_CONSTANT);
            }
        } 

// KIT_TC_RDoor_Bot Animation
	if (pickInfo.pickedMesh.name=="KIT_TC_RDoor_Bot")
		{
            if (KIBS==0 & KICS==0 & KITS==0)
                {
                if (pickInfo.pickedMesh.rotation.y==0)
                {
                BABYLON.Animation.CreateAndStartAnimation("KIT_TC_RDoor_Bot_Open", pickInfo.pickedMesh, "rotation.y", 30, 30, Door_Closed, -Door_Opened, BABYLON.Animation.ANIMATIONLOOPMODE_CONSTANT);
                KBDS=1;
                }
            else
                {
                BABYLON.Animation.CreateAndStartAnimation("KIT_TC_RDoor_Bot_Close", pickInfo.pickedMesh, "rotation.y", 30, 30, -Door_Opened, Door_Closed, BABYLON.Animation.ANIMATIONLOOPMODE_CONSTANT);
                KBDS=0;
                }
                }
		}

// KIT_TC_RDoor_Top Animation
	if (pickInfo.pickedMesh.name=="KIT_TC_RDoor_Top")
		{
                if (pickInfo.pickedMesh.rotation.y==0)
                {
                BABYLON.Animation.CreateAndStartAnimation("KIT_TC_RDoor_Top_Open", pickInfo.pickedMesh, "rotation.y", 30, 30, Door_Closed, -Door_Opened, BABYLON.Animation.ANIMATIONLOOPMODE_CONSTANT);
                }
            else
                {
                BABYLON.Animation.CreateAndStartAnimation("KIT_TC_RDoor_Top_Close", pickInfo.pickedMesh, "rotation.y", 30, 30, -Door_Opened, Door_Closed, BABYLON.Animation.ANIMATIONLOOPMODE_CONSTANT);
                }
		}


// KIT_TC_Drawer_Bot Animation
	if (pickInfo.pickedMesh.name=="KIT_TC_Drawer_Bot")
		{
            if (pickInfo.pickedMesh.position.z==0)
            {
                BABYLON.Animation.CreateAndStartAnimation("KIT_TC_Drawer_Bot_Open", pickInfo.pickedMesh, "position.z", 30, 30, Drawer_Closed, Drawer600_Opened, BABYLON.Animation.ANIMATIONLOOPMODE_CONSTANT);
                KIBS=1;
            }
            else
            {
                BABYLON.Animation.CreateAndStartAnimation("KIT_TC_Drawer_Bot_Close", pickInfo.pickedMesh, "position.z", 30, 30, Drawer600_Opened, Drawer_Closed, BABYLON.Animation.ANIMATIONLOOPMODE_CONSTANT);
                KIBS=0;
            }
        } 

// KIT_TC_Drawer_Center Animation
	if (pickInfo.pickedMesh.name=="KIT_TC_Drawer_Center")
		{
            if (pickInfo.pickedMesh.position.z==0)
            {
                BABYLON.Animation.CreateAndStartAnimation("KIT_TC_Drawer_Center_Open", pickInfo.pickedMesh, "position.z", 30, 30, Drawer_Closed, Drawer600_Opened, BABYLON.Animation.ANIMATIONLOOPMODE_CONSTANT);
                KICS=1;
            }
            else
            {
                BABYLON.Animation.CreateAndStartAnimation("KIT_TC_Drawer_Center_Close", pickInfo.pickedMesh, "position.z", 30, 30, Drawer600_Opened, Drawer_Closed, BABYLON.Animation.ANIMATIONLOOPMODE_CONSTANT);
                KICS=0;
            }
        } 

// KIT_TC_Drawer_Top Animation
	if (pickInfo.pickedMesh.name=="KIT_TC_Drawer_Top")
		{
            if (pickInfo.pickedMesh.position.z==0)
            {
                BABYLON.Animation.CreateAndStartAnimation("KIT_TC_Drawer_Top_Open", pickInfo.pickedMesh, "position.z", 30, 30, Drawer_Closed, Drawer600_Opened, BABYLON.Animation.ANIMATIONLOOPMODE_CONSTANT);
                KITS=1;
            }
            else
            {
                BABYLON.Animation.CreateAndStartAnimation("KIT_TC_Drawer_Top_Close", pickInfo.pickedMesh, "position.z", 30, 30, Drawer600_Opened, Drawer_Closed, BABYLON.Animation.ANIMATIONLOOPMODE_CONSTANT);
                KITS=0;
            }
        } 


// AIR_01_LDoor Animation
	if (pickInfo.pickedMesh.name=="AIR_01_LDoor")
		{
            if (pickInfo.pickedMesh.rotation.y==0)
            {
                BABYLON.Animation.CreateAndStartAnimation("AIR_01_LDoor_Open", pickInfo.pickedMesh, "rotation.y", 30, 30, Door_Closed, Door_Opened, BABYLON.Animation.ANIMATIONLOOPMODE_CONSTANT);
            }
            else
            {
                BABYLON.Animation.CreateAndStartAnimation("AIR_01_LDoor_Close", pickInfo.pickedMesh, "rotation.y", 30, 30, Door_Opened, -Door_Closed, BABYLON.Animation.ANIMATIONLOOPMODE_CONSTANT);
            }
		}


// AIR_01_RDoor Animation
	if (pickInfo.pickedMesh.name=="AIR_01_RDoor")
		{
            if (A2LDS==0)
            {
                if (pickInfo.pickedMesh.rotation.y==0)
                {
                BABYLON.Animation.CreateAndStartAnimation("AIR_01_RDoor_Open", pickInfo.pickedMesh, "rotation.y", 30, 30, Door_Closed, -Door_Opened, BABYLON.Animation.ANIMATIONLOOPMODE_CONSTANT);
                A1RDS=1;
                }
            else
                {
                BABYLON.Animation.CreateAndStartAnimation("AIR_01_RDoor_Close", pickInfo.pickedMesh, "rotation.y", 30, 30, -Door_Opened, Door_Closed, BABYLON.Animation.ANIMATIONLOOPMODE_CONSTANT);
                A1RDS=0;
                }
            }
		}

// AIR_02_LDoor Animation
	if (pickInfo.pickedMesh.name=="AIR_02_LDoor")
		{
            if (A1RDS==0)
            {
                if (pickInfo.pickedMesh.rotation.y==0)
                {
                BABYLON.Animation.CreateAndStartAnimation("AIR_02_LDoor_Open", pickInfo.pickedMesh, "rotation.y", 30, 30, Door_Closed, Door_Opened, BABYLON.Animation.ANIMATIONLOOPMODE_CONSTANT);
                A2LDS=1;
                }
                else
                {
                BABYLON.Animation.CreateAndStartAnimation("AIR_02_LDoor_Close", pickInfo.pickedMesh, "rotation.y", 30, 30, Door_Opened, -Door_Closed, BABYLON.Animation.ANIMATIONLOOPMODE_CONSTANT);
                A2LDS=0;
                }
            }
		}


// AIR_02_RDoor Animation
	if (pickInfo.pickedMesh.name=="AIR_02_RDoor")
		{
                if (pickInfo.pickedMesh.rotation.y==0)
                {
                BABYLON.Animation.CreateAndStartAnimation("AIR_02_RDoor_Open", pickInfo.pickedMesh, "rotation.y", 30, 30, Door_Closed, -Door_Opened, BABYLON.Animation.ANIMATIONLOOPMODE_CONSTANT);

                }
            else
                {
                BABYLON.Animation.CreateAndStartAnimation("AIR_02_RDoor_Close", pickInfo.pickedMesh, "rotation.y", 30, 30, -Door_Opened, Door_Closed, BABYLON.Animation.ANIMATIONLOOPMODE_CONSTANT);
                }
		}

// IS_BL_01_Drawer Animation
	if (pickInfo.pickedMesh.name=="IS_BL_01_Drawer")
		{
            if (pickInfo.pickedMesh.position.z==0)
            {
                BABYLON.Animation.CreateAndStartAnimation("IS_BL_01_Drawer_Open", pickInfo.pickedMesh, "position.z", 30, 30, Drawer_Closed, -Drawer550_Opened, BABYLON.Animation.ANIMATIONLOOPMODE_CONSTANT);
            }
            else
            {
                BABYLON.Animation.CreateAndStartAnimation("IS_BL_01_Drawer_Close", pickInfo.pickedMesh, "position.z", 30, 30, -Drawer550_Opened, Drawer_Closed, BABYLON.Animation.ANIMATIONLOOPMODE_CONSTANT);
            }
        }

// IS_BL_02_Drawer Animation
	if (pickInfo.pickedMesh.name=="IS_BL_02_Drawer")
		{
            if (pickInfo.pickedMesh.position.z==0)
            {
                BABYLON.Animation.CreateAndStartAnimation("IS_BL_02_Drawer_Open", pickInfo.pickedMesh, "position.z", 30, 30, Drawer_Closed, -Drawer550_Opened, BABYLON.Animation.ANIMATIONLOOPMODE_CONSTANT);
            }
            else
            {
                BABYLON.Animation.CreateAndStartAnimation("IS_BL_02_Drawer_Close", pickInfo.pickedMesh, "position.z", 30, 30, -Drawer550_Opened, Drawer_Closed, BABYLON.Animation.ANIMATIONLOOPMODE_CONSTANT);
            }
        }

// IS_BL_03_Drawer Animation
	if (pickInfo.pickedMesh.name=="IS_BL_03_Drawer")
		{
            if (pickInfo.pickedMesh.position.z==0)
            {
                BABYLON.Animation.CreateAndStartAnimation("IS_BL_03_Drawer_Open", pickInfo.pickedMesh, "position.z", 30, 30, Drawer_Closed, -Drawer550_Opened, BABYLON.Animation.ANIMATIONLOOPMODE_CONSTANT);
            }
            else
            {
                BABYLON.Animation.CreateAndStartAnimation("IS_BL_03_Drawer_Close", pickInfo.pickedMesh, "position.z", 30, 30, -Drawer550_Opened, Drawer_Closed, BABYLON.Animation.ANIMATIONLOOPMODE_CONSTANT);
            }
        }

// IS_SL_01_Drawer Animation
	if (pickInfo.pickedMesh.name=="IS_SL_01_Drawer")
		{
            if (pickInfo.pickedMesh.position.z==0)
            {
                BABYLON.Animation.CreateAndStartAnimation("IS_SL_01_Drawer_Open", pickInfo.pickedMesh, "position.z", 30, 30, Drawer_Closed, -Drawer300_Opened, BABYLON.Animation.ANIMATIONLOOPMODE_CONSTANT);
            }
            else
            {
                BABYLON.Animation.CreateAndStartAnimation("IS_SL_01_Drawer_Close", pickInfo.pickedMesh, "position.z", 30, 30, -Drawer300_Opened, Drawer_Closed, BABYLON.Animation.ANIMATIONLOOPMODE_CONSTANT);
            }
        }

// IS_SL_02_Drawer Animation
	if (pickInfo.pickedMesh.name=="IS_SL_02_Drawer")
		{
            if (pickInfo.pickedMesh.position.z==0)
            {
                BABYLON.Animation.CreateAndStartAnimation("IS_SL_02_Drawer_Open", pickInfo.pickedMesh, "position.z", 30, 30, Drawer_Closed, -Drawer300_Opened, BABYLON.Animation.ANIMATIONLOOPMODE_CONSTANT);
            }
            else
            {
                BABYLON.Animation.CreateAndStartAnimation("IS_SL_02_Drawer_Close", pickInfo.pickedMesh, "position.z", 30, 30, -Drawer300_Opened, Drawer_Closed, BABYLON.Animation.ANIMATIONLOOPMODE_CONSTANT);
            }
        }

// IS_SL_03_Drawer Animation
	if (pickInfo.pickedMesh.name=="IS_SL_03_Drawer")
		{
            if (pickInfo.pickedMesh.position.z==0)
            {
                BABYLON.Animation.CreateAndStartAnimation("IS_SL_03_Drawer_Open", pickInfo.pickedMesh, "position.z", 30, 30, Drawer_Closed, -Drawer300_Opened, BABYLON.Animation.ANIMATIONLOOPMODE_CONSTANT);
            }
            else
            {
                BABYLON.Animation.CreateAndStartAnimation("IS_SL_03_Drawer_Close", pickInfo.pickedMesh, "position.z", 30, 30, -Drawer300_Opened, Drawer_Closed, BABYLON.Animation.ANIMATIONLOOPMODE_CONSTANT);
            }
        }

// IS_SL_04_Drawer Animation
	if (pickInfo.pickedMesh.name=="IS_SL_04_Drawer")
		{
            if (pickInfo.pickedMesh.position.z==0)
            {
                BABYLON.Animation.CreateAndStartAnimation("IS_SL_04_Drawer_Open", pickInfo.pickedMesh, "position.z", 30, 30, Drawer_Closed, Drawer300_Opened, BABYLON.Animation.ANIMATIONLOOPMODE_CONSTANT);
            }
            else
            {
                BABYLON.Animation.CreateAndStartAnimation("IS_SL_04_Drawer_Close", pickInfo.pickedMesh, "position.z", 30, 30, Drawer300_Opened, Drawer_Closed, BABYLON.Animation.ANIMATIONLOOPMODE_CONSTANT);
            }
        }

// IS_SL_05_Drawer Animation
	if (pickInfo.pickedMesh.name=="IS_SL_05_Drawer")
		{
            if (pickInfo.pickedMesh.position.z==0)
            {
                BABYLON.Animation.CreateAndStartAnimation("IS_SL_05_Drawer_Open", pickInfo.pickedMesh, "position.z", 30, 30, Drawer_Closed, Drawer300_Opened, BABYLON.Animation.ANIMATIONLOOPMODE_CONSTANT);
            }
            else
            {
                BABYLON.Animation.CreateAndStartAnimation("IS_SL_05_Drawer_Close", pickInfo.pickedMesh, "position.z", 30, 30, Drawer300_Opened, Drawer_Closed, BABYLON.Animation.ANIMATIONLOOPMODE_CONSTANT);
            }
        }

// IS_SL_06_Drawer Animation
	if (pickInfo.pickedMesh.name=="IS_SL_06_Drawer")
		{
            if (pickInfo.pickedMesh.position.z==0)
            {
                BABYLON.Animation.CreateAndStartAnimation("IS_SL_06_Drawer_Open", pickInfo.pickedMesh, "position.z", 30, 30, Drawer_Closed, Drawer300_Opened, BABYLON.Animation.ANIMATIONLOOPMODE_CONSTANT);
            }
            else
            {
                BABYLON.Animation.CreateAndStartAnimation("IS_SL_06_Drawer_Close", pickInfo.pickedMesh, "position.z", 30, 30, Drawer300_Opened, Drawer_Closed, BABYLON.Animation.ANIMATIONLOOPMODE_CONSTANT);
            }
        }


//--//











        }
        }
    }

    return scene;
}
