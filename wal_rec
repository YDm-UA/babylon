var createScene = function () {
    // This creates a basic Babylon Scene object (non-mesh)
    var scene = new BABYLON.Scene(engine);
	var camera = new BABYLON.ArcRotateCamera("Camera", 0, 0, 0, BABYLON.Vector3.Zero(), scene);
    camera.setPosition(new BABYLON.Vector3(-11, 11, -11));
	camera.attachControl(canvas, false);
    scene.clearColor = new BABYLON.Color3(0.99, 0.99, 0.99);


    var Door_Opened=1.8326;          //105°
    var Door_FixedAgle=1.44862;          //83°
    var Door_Closed=0;
    var Drawer_Opened=0.45;
    var Drawer_Closed=0;

    C031DS=0;    
    C032DS=0;    
    C033DS=0;    
    C034DS=0;    
    C04DS=0;




    var Marker = new BABYLON.StandardMaterial("Marker",scene);
    Marker.diffuseColor = new BABYLON.Color3(1, 0, 0);

//scene camera and light
        scene.createDefaultCameraOrLight(true);
        scene.activeCamera.attachControl(canvas, false);
        scene.activeCamera.alpha += 0.1+Math.PI; // camera +180°    

    // The first parameter can be used to specify which mesh to import. Here we import all meshes

    BABYLON.SceneLoader.Append("https://raw.githubusercontent.com/YDm-UA/babylon/main/", "wal_reception_join.glb",
    scene, function (newMeshes) {

//scene materials
    var SceneMat = new BABYLON.MultiMaterial('SceneMat', scene);
        SceneMat.subMaterials.push(scene.getMaterialByName("Carcass"));             // 0
        SceneMat.subMaterials.push(scene.getMaterialByName("Drawer"));              // 1
        SceneMat.subMaterials.push(scene.getMaterialByName("Front"));               // 2
        SceneMat.subMaterials.push(scene.getMaterialByName("Handle"));              // 3
        SceneMat.subMaterials.push(scene.getMaterialByName("Kick"));                // 4
        SceneMat.subMaterials.push(scene.getMaterialByName("White"));               // 5


//Reception
    var Reception = BABYLON.Mesh.MergeMeshes(
        [
            scene.getMeshByName("Reception_primitive0"),
            scene.getMeshByName("Reception_primitive1"),
            scene.getMeshByName("Reception_primitive2"),
            scene.getMeshByName("Reception_primitive3")
            ], true, true, undefined, false, true);
        Reception.material = SceneMat;
        Reception.subMeshes[0].materialIndex = 5;
        Reception.subMeshes[1].materialIndex = 2;
        Reception.subMeshes[2].materialIndex = 4;
        Reception.subMeshes[3].materialIndex = 0;
        Reception.name = Reception.id = "Reception";
        //Reception.showBoundingBox=true;


//C01_Door
    var C01_Door = BABYLON.Mesh.MergeMeshes(
        [
            scene.getMeshByName("C01_Door_primitive0"),
            scene.getMeshByName("C01_Door_primitive1")
            ], true, true, undefined, false, true);
        C01_Door.material = SceneMat;
        C01_Door.subMeshes[0].materialIndex = 3;
        C01_Door.subMeshes[1].materialIndex = 2;
        C01_Door.name = C01_Door.id = "C01_Door";
        C01_Door.setPivotPoint(new BABYLON.Vector3(-1.45452,0.469,1.41222));
        C01_Door.actionManager = new BABYLON.ActionManager(scene);
        C01_Door.actionManager.isRecursive = true;
        
        C01_Door.actionManager.registerAction(new BABYLON.ExecuteCodeAction(
                { trigger: BABYLON.ActionManager.OnPickDownTrigger },
                function() {
                    if (C01_Door.rotation.y==0)
            {
BABYLON.Animation.CreateAndStartAnimation("C01_Door_Open", C01_Door, "rotation.y", 30, 30, Door_Closed, Door_Opened, BABYLON.Animation.ANIMATIONLOOPMODE_CONSTANT);
            }
            else
            {
BABYLON.Animation.CreateAndStartAnimation("C01_Door_Close", C01_Door, "rotation.y", 30, 30, Door_Opened, -Door_Closed, BABYLON.Animation.ANIMATIONLOOPMODE_CONSTANT);
            }
                }));


//C02_Drawer_01
    var C02_Drawer_01 = BABYLON.Mesh.MergeMeshes(
        [
            scene.getMeshByName("C02_Drawer_01_primitive0"),
            scene.getMeshByName("C02_Drawer_01_primitive1"),
            scene.getMeshByName("C02_Drawer_01_primitive2")
            ], true, true, undefined, false, true);
        C02_Drawer_01.material = SceneMat;
        C02_Drawer_01.subMeshes[0].materialIndex = 3;
        C02_Drawer_01.subMeshes[1].materialIndex = 2;
        C02_Drawer_01.subMeshes[2].materialIndex = 1;        
        C02_Drawer_01.name = C02_Drawer_01.id = "C02_Drawer_01";
        //C02_Drawer_01.showBoundingBox=true;
        C02_Drawer_01.setPivotPoint(new BABYLON.Vector3(0.796678,0.6,1.41222));
        C02_Drawer_01.actionManager = new BABYLON.ActionManager(scene);
        C02_Drawer_01.actionManager.isRecursive = true;

        C02_Drawer_01.actionManager.registerAction(new BABYLON.ExecuteCodeAction(
                { trigger: BABYLON.ActionManager.OnPickDownTrigger },
                function() {
                    if (C02_Drawer_01.position.z==0)
            {
                BABYLON.Animation.CreateAndStartAnimation("C02_Drawer_01_Open", C02_Drawer_01, "position.z", 30, 30, Drawer_Closed, -Drawer_Opened, BABYLON.Animation.ANIMATIONLOOPMODE_CONSTANT);
            }
            else
            {
                BABYLON.Animation.CreateAndStartAnimation("C02_Drawer_01_Close", C02_Drawer_01, "position.z", 30, 30, -Drawer_Opened, Drawer_Closed, BABYLON.Animation.ANIMATIONLOOPMODE_CONSTANT);
            }
                }));



//C02_Drawer_02
    var C02_Drawer_02 = BABYLON.Mesh.MergeMeshes(
        [
            scene.getMeshByName("C02_Drawer_02_primitive0"),
            scene.getMeshByName("C02_Drawer_02_primitive1"),
            scene.getMeshByName("C02_Drawer_02_primitive2")
            ], true, true, undefined, false, true);
        C02_Drawer_02.material = SceneMat;
        C02_Drawer_02.subMeshes[0].materialIndex = 3;
        C02_Drawer_02.subMeshes[1].materialIndex = 2;
        C02_Drawer_02.subMeshes[2].materialIndex = 1;        
        C02_Drawer_02.name = C02_Drawer_02.id = "C02_Drawer_02";
        //C02_Drawer_02.showBoundingBox=true;
        C02_Drawer_02.setPivotPoint(new BABYLON.Vector3(0.672494,0.6,1.41222));
        C02_Drawer_02.actionManager = new BABYLON.ActionManager(scene);
        C02_Drawer_02.actionManager.isRecursive = true;

        C02_Drawer_02.actionManager.registerAction(new BABYLON.ExecuteCodeAction(
                { trigger: BABYLON.ActionManager.OnPickDownTrigger },
                function() {
                    if (C02_Drawer_02.position.z==0)
            {
                BABYLON.Animation.CreateAndStartAnimation("C02_Drawer_02_Open", C02_Drawer_02, "position.z", 30, 30, Drawer_Closed, -Drawer_Opened, BABYLON.Animation.ANIMATIONLOOPMODE_CONSTANT);
            }
            else
            {
                BABYLON.Animation.CreateAndStartAnimation("C02_Drawer_02_Close", C02_Drawer_02, "position.z", 30, 30, -Drawer_Opened, Drawer_Closed, BABYLON.Animation.ANIMATIONLOOPMODE_CONSTANT);
            }
                }));


//C02_Drawer_03
    var C02_Drawer_03 = BABYLON.Mesh.MergeMeshes(
        [
            scene.getMeshByName("C02_Drawer_03_primitive0"),
            scene.getMeshByName("C02_Drawer_03_primitive1"),
            scene.getMeshByName("C02_Drawer_03_primitive2")
            ], true, true, undefined, false, true);
        C02_Drawer_03.material = SceneMat;
        C02_Drawer_03.subMeshes[0].materialIndex = 3;
        C02_Drawer_03.subMeshes[1].materialIndex = 2;
        C02_Drawer_03.subMeshes[2].materialIndex = 1;        
        C02_Drawer_03.name = C02_Drawer_03.id = "C02_Drawer_03";
        //C02_Drawer_03.showBoundingBox=true;
        C02_Drawer_03.setPivotPoint(new BABYLON.Vector3(0.548494,0.6,1.41222));
        C02_Drawer_03.actionManager = new BABYLON.ActionManager(scene);
        C02_Drawer_03.actionManager.isRecursive = true;

        C02_Drawer_03.actionManager.registerAction(new BABYLON.ExecuteCodeAction(
                { trigger: BABYLON.ActionManager.OnPickDownTrigger },
                function() {
                    if (C02_Drawer_03.position.z==0)
            {
                BABYLON.Animation.CreateAndStartAnimation("C02_Drawer_03_Open", C02_Drawer_03, "position.z", 30, 30, Drawer_Closed, -Drawer_Opened, BABYLON.Animation.ANIMATIONLOOPMODE_CONSTANT);
            }
            else
            {
                BABYLON.Animation.CreateAndStartAnimation("C02_Drawer_03_Close", C02_Drawer_03, "position.z", 30, 30, -Drawer_Opened, Drawer_Closed, BABYLON.Animation.ANIMATIONLOOPMODE_CONSTANT);
            }
                }));        

//C02_Drawer_04
    var C02_Drawer_04 = BABYLON.Mesh.MergeMeshes(
        [
            scene.getMeshByName("C02_Drawer_04_primitive0"),
            scene.getMeshByName("C02_Drawer_04_primitive1"),
            scene.getMeshByName("C02_Drawer_04_primitive2")
            ], true, true, undefined, false, true);
        C02_Drawer_04.material = SceneMat;
        C02_Drawer_04.subMeshes[0].materialIndex = 3;
        C02_Drawer_04.subMeshes[1].materialIndex = 2;
        C02_Drawer_04.subMeshes[2].materialIndex = 1;        
        C02_Drawer_04.name = C02_Drawer_04.id = "C02_Drawer_04";
        //C02_Drawer_04.showBoundingBox=true;
        C02_Drawer_04.setPivotPoint(new BABYLON.Vector3(0.303494,0.6,1.41222));
        C02_Drawer_04.actionManager = new BABYLON.ActionManager(scene);
        C02_Drawer_04.actionManager.isRecursive = true;

        C02_Drawer_04.actionManager.registerAction(new BABYLON.ExecuteCodeAction(
                { trigger: BABYLON.ActionManager.OnPickDownTrigger },
                function() {
                    if (C02_Drawer_04.position.z==0)
            {
                BABYLON.Animation.CreateAndStartAnimation("C02_Drawer_04_Open", C02_Drawer_04, "position.z", 30, 30, Drawer_Closed, -Drawer_Opened, BABYLON.Animation.ANIMATIONLOOPMODE_CONSTANT);
            }
            else
            {
                BABYLON.Animation.CreateAndStartAnimation("C02_Drawer_04_Close", C02_Drawer_04, "position.z", 30, 30, -Drawer_Opened, Drawer_Closed, BABYLON.Animation.ANIMATIONLOOPMODE_CONSTANT);
            }
                }));


//C03_Drawer_01
    var C03_Drawer_01 = BABYLON.Mesh.MergeMeshes(
        [
            scene.getMeshByName("C03_Drawer_01_primitive0"),
            scene.getMeshByName("C03_Drawer_01_primitive1"),
            scene.getMeshByName("C03_Drawer_01_primitive2")
            ], true, true, undefined, false, true);
        C03_Drawer_01.material = SceneMat;
        C03_Drawer_01.subMeshes[0].materialIndex = 3;
        C03_Drawer_01.subMeshes[1].materialIndex = 2;
        C03_Drawer_01.subMeshes[2].materialIndex = 1;        
        C03_Drawer_01.name = C03_Drawer_01.id = "C03_Drawer_01";
        //C03_Drawer_01.showBoundingBox=true;
        C03_Drawer_01.setPivotPoint(new BABYLON.Vector3(0.796678,0.6,1.41222));
        C03_Drawer_01.actionManager = new BABYLON.ActionManager(scene);
        C03_Drawer_01.actionManager.isRecursive = true;
        C03_Drawer_01.actionManager.registerAction(new BABYLON.ExecuteCodeAction(
                { trigger: BABYLON.ActionManager.OnPickDownTrigger },
                function() {
                    if (C03_Drawer_01.position.z==0)
            {
                if (C04DS==0)
                {
                BABYLON.Animation.CreateAndStartAnimation("C03_Drawer_01_Open", C03_Drawer_01, "position.z", 30, 30, Drawer_Closed, -Drawer_Opened, BABYLON.Animation.ANIMATIONLOOPMODE_CONSTANT);
                C031DS=1;
                }
            }
            else
            {
                BABYLON.Animation.CreateAndStartAnimation("C03_Drawer_01_Close", C03_Drawer_01, "position.z", 30, 30, -Drawer_Opened, Drawer_Closed, BABYLON.Animation.ANIMATIONLOOPMODE_CONSTANT);
                C031DS=0;
            }
                }));


//C03_Drawer_02
    var C03_Drawer_02 = BABYLON.Mesh.MergeMeshes(
        [
            scene.getMeshByName("C03_Drawer_02_primitive0"),
            scene.getMeshByName("C03_Drawer_02_primitive1"),
            scene.getMeshByName("C03_Drawer_02_primitive2")
            ], true, true, undefined, false, true);
        C03_Drawer_02.material = SceneMat;
        C03_Drawer_02.subMeshes[0].materialIndex = 3;
        C03_Drawer_02.subMeshes[1].materialIndex = 2;
        C03_Drawer_02.subMeshes[2].materialIndex = 1;        
        C03_Drawer_02.name = C03_Drawer_02.id = "C03_Drawer_02";
        //C03_Drawer_02.showBoundingBox=true;
        C03_Drawer_02.setPivotPoint(new BABYLON.Vector3(0.672494,0.6,1.41222));
        C03_Drawer_02.actionManager = new BABYLON.ActionManager(scene);
        C03_Drawer_02.actionManager.isRecursive = true;

        C03_Drawer_02.actionManager.registerAction(new BABYLON.ExecuteCodeAction(
                { trigger: BABYLON.ActionManager.OnPickDownTrigger },
                function() {
                    if (C03_Drawer_02.position.z==0)
            {
                if (C04DS==0)
                {
                BABYLON.Animation.CreateAndStartAnimation("C03_Drawer_02_Open", C03_Drawer_02, "position.z", 30, 30, Drawer_Closed, -Drawer_Opened, BABYLON.Animation.ANIMATIONLOOPMODE_CONSTANT);
                C032DS=1;
                }
            }
            else
            {

                BABYLON.Animation.CreateAndStartAnimation("C03_Drawer_02_Close", C03_Drawer_02, "position.z", 30, 30, -Drawer_Opened, Drawer_Closed, BABYLON.Animation.ANIMATIONLOOPMODE_CONSTANT);
                C032DS=0;
            }
                }));        

//C03_Drawer_03
    var C03_Drawer_03 = BABYLON.Mesh.MergeMeshes(
        [
            scene.getMeshByName("C03_Drawer_03_primitive0"),
            scene.getMeshByName("C03_Drawer_03_primitive1"),
            scene.getMeshByName("C03_Drawer_03_primitive2")
            ], true, true, undefined, false, true);
        C03_Drawer_03.material = SceneMat;
        C03_Drawer_03.subMeshes[0].materialIndex = 3;
        C03_Drawer_03.subMeshes[1].materialIndex = 2;
        C03_Drawer_03.subMeshes[2].materialIndex = 1;        
        C03_Drawer_03.name = C03_Drawer_03.id = "C03_Drawer_03";
        //C03_Drawer_03.showBoundingBox=true;
        C03_Drawer_03.setPivotPoint(new BABYLON.Vector3(0.672494,0.6,1.41222));
        C03_Drawer_03.actionManager = new BABYLON.ActionManager(scene);
        C03_Drawer_03.actionManager.isRecursive = true;

        C03_Drawer_03.actionManager.registerAction(new BABYLON.ExecuteCodeAction(
                { trigger: BABYLON.ActionManager.OnPickDownTrigger },
                function() {
                    if (C03_Drawer_03.position.z==0)
            {
                if (C04DS==0)
                {
                BABYLON.Animation.CreateAndStartAnimation("C03_Drawer_03_Open", C03_Drawer_03, "position.z", 30, 30, Drawer_Closed, -Drawer_Opened, BABYLON.Animation.ANIMATIONLOOPMODE_CONSTANT);
                C033DS=1;
                }
            }
            else
            {
                BABYLON.Animation.CreateAndStartAnimation("C03_Drawer_03_Close", C03_Drawer_03, "position.z", 30, 30, -Drawer_Opened, Drawer_Closed, BABYLON.Animation.ANIMATIONLOOPMODE_CONSTANT);
                C033DS=0;
            }
                }));        

//C03_Drawer_04
    var C03_Drawer_04 = BABYLON.Mesh.MergeMeshes(
        [
            scene.getMeshByName("C03_Drawer_04_primitive0"),
            scene.getMeshByName("C03_Drawer_04_primitive1"),
            scene.getMeshByName("C03_Drawer_04_primitive2")
            ], true, true, undefined, false, true);
        C03_Drawer_04.material = SceneMat;
        C03_Drawer_04.subMeshes[0].materialIndex = 3;
        C03_Drawer_04.subMeshes[1].materialIndex = 2;
        C03_Drawer_04.subMeshes[2].materialIndex = 1;        
        C03_Drawer_04.name = C03_Drawer_04.id = "C03_Drawer_04";
        //C03_Drawer_04.showBoundingBox=true;
        C03_Drawer_04.setPivotPoint(new BABYLON.Vector3(0.672494,0.6,1.41222));
        C03_Drawer_04.actionManager = new BABYLON.ActionManager(scene);
        C03_Drawer_04.actionManager.isRecursive = true;

        C03_Drawer_04.actionManager.registerAction(new BABYLON.ExecuteCodeAction(
                { trigger: BABYLON.ActionManager.OnPickDownTrigger },
                function() {
                    if (C03_Drawer_04.position.z==0)
            {
                if (C04DS==0)
                {                
                BABYLON.Animation.CreateAndStartAnimation("C03_Drawer_04_Open", C03_Drawer_04, "position.z", 30, 30, Drawer_Closed, -Drawer_Opened, BABYLON.Animation.ANIMATIONLOOPMODE_CONSTANT);
                C034DS=1;
                }
            }
            else
            {

                BABYLON.Animation.CreateAndStartAnimation("C03_Drawer_04_Close", C03_Drawer_04, "position.z", 30, 30, -Drawer_Opened, Drawer_Closed, BABYLON.Animation.ANIMATIONLOOPMODE_CONSTANT);
                C034DS=0;
            }
                }));


//C04_Door
    var C04_Door = BABYLON.Mesh.MergeMeshes(
        [
            scene.getMeshByName("C04_Door_primitive0"),
            scene.getMeshByName("C04_Door_primitive1")
            ], true, true, undefined, false, true);
        C04_Door.material = SceneMat;
        C04_Door.subMeshes[0].materialIndex = 3;
        C04_Door.subMeshes[1].materialIndex = 2;
        C04_Door.name = C04_Door.id = "C04_Door";
        //C04_Door.showBoundingBox=true;        
        C04_Door.setPivotPoint(new BABYLON.Vector3(1.74824,0.469,1.39914));
        C04_Door.actionManager = new BABYLON.ActionManager(scene);
        C04_Door.actionManager.isRecursive = true;
        
        C04_Door.actionManager.registerAction(new BABYLON.ExecuteCodeAction(
                { trigger: BABYLON.ActionManager.OnPickDownTrigger },
                function() {
                    if (C04_Door.rotation.y==0)
            {
                if (C031DS==0 & C032DS==0 & C033DS==0 & C034DS==0)
                {
                BABYLON.Animation.CreateAndStartAnimation("C04_Door_Open", C04_Door, "rotation.y", 30, 30, Door_Closed, Door_FixedAgle, BABYLON.Animation.ANIMATIONLOOPMODE_CONSTANT);
                C04DS=1;
                }
            }
            else
            {
                BABYLON.Animation.CreateAndStartAnimation("C04_Door_Close", C04_Door, "rotation.y", 30, 30, Door_FixedAgle, -Door_Closed, BABYLON.Animation.ANIMATIONLOOPMODE_CONSTANT);
                C04DS=0;
            }
                }));    


//C05_Drawer_01
    var C05_Drawer_01 = BABYLON.Mesh.MergeMeshes(
        [
            scene.getMeshByName("C05_Drawer_01_primitive0"),
            scene.getMeshByName("C05_Drawer_01_primitive1"),
            scene.getMeshByName("C05_Drawer_01_primitive2")
            ], true, true, undefined, false, true);
        C05_Drawer_01.material = SceneMat;
        C05_Drawer_01.subMeshes[0].materialIndex = 3;
        C05_Drawer_01.subMeshes[1].materialIndex = 2;
        C05_Drawer_01.subMeshes[2].materialIndex = 1;        
        C05_Drawer_01.name = C05_Drawer_01.id = "C05_Drawer_01";
        //C05_Drawer_01.showBoundingBox=true;
        C05_Drawer_01.setPivotPoint(new BABYLON.Vector3(2.14595,0.794744,1.41222));
        
        //C05_Drawer_01.rotate(z, Door_FixedAgle, BABYLON.Space.WORLD);

        C05_Drawer_01.actionManager = new BABYLON.ActionManager(scene);
        C05_Drawer_01.actionManager.isRecursive = true;
        C05_Drawer_01.actionManager.registerAction(new BABYLON.ExecuteCodeAction(
                { trigger: BABYLON.ActionManager.OnPickDownTrigger },
                function() {
                    if (C05_Drawer_01.position.z==0)
            {
                BABYLON.Animation.CreateAndStartAnimation("C05_Drawer_01_Open", C05_Drawer_01, "position.z", 30, 30, Drawer_Closed, -Drawer_Opened, BABYLON.Animation.ANIMATIONLOOPMODE_CONSTANT);
            }
            else
            {
                BABYLON.Animation.CreateAndStartAnimation("C05_Drawer_01_Close", C05_Drawer_01, "position.z", 30, 30, -Drawer_Opened, Drawer_Closed, BABYLON.Animation.ANIMATIONLOOPMODE_CONSTANT);
            }
                }));


//BT_Open
    var BT_Open = BABYLON.Mesh.MergeMeshes(
        [
            scene.getMeshByName("BT_Black_Opening")
            ], true, true, undefined, false, true);
        BT_Open.material = SceneMat;
        BT_Open.subMeshes[0].materialIndex = 2;
        BT_Open.name = BT_Open.id = "BT_Open";
        //BT_Open.showBoundingBox=true;
        BT_Open.setPivotPoint(new BABYLON.Vector3(-2.48708,0.87,0.46125));
        BT_Open.actionManager = new BABYLON.ActionManager(scene);
        BT_Open.actionManager.isRecursive = true;
        BT_Open.actionManager.registerAction(new BABYLON.ExecuteCodeAction(
                { trigger: BABYLON.ActionManager.OnPickDownTrigger },
                function() {
                    if (BT_Open.rotation.x==0)
            {
BABYLON.Animation.CreateAndStartAnimation("BT_Open_Open", BT_Open, "rotation.x", 30, 30, Door_Closed, -Door_Opened, BABYLON.Animation.ANIMATIONLOOPMODE_CONSTANT);
            }
            else
            {
BABYLON.Animation.CreateAndStartAnimation("BT_Open_Close", BT_Open, "rotation.x", 30, 30, -Door_Opened, -Door_Closed, BABYLON.Animation.ANIMATIONLOOPMODE_CONSTANT);
            }
                }));


////        
    });        

        scene.createDefaultCameraOrLight(true);
        scene.activeCamera.attachControl(canvas, false);
        scene.activeCamera.alpha += 0.1+Math.PI; // camera +180°
        camera.minZ = 1;
        camera.maxZ = 1000;
        camera.wheelPrecision=10;
        scene.clipPlane = null;
        camera.setPosition(new BABYLON.Vector3(-10, 5, 10));
        scene.clearColor = new BABYLON.Color3(0.99, 0.99, 0.99);    
        //scene.camera.attachControl(AIR_Alum, true);
        //camera.setTarget(scene.getMeshByName("AIR_Cabinet"));
        camera.angularSensibility = 1;
        camera.moveSensibility = 1;
        //camera.setTarget(new BABYLON.Vector3(-4, 12, -5));
        camera.attachControl(canvas, true);
	
var pipeline = new BABYLON.DefaultRenderingPipeline(
    "defaultPipeline", // The name of the pipeline
    true, // Do you want the pipeline to use HDR texture?
    scene, // The scene instance
    [camera] // The list of cameras to be attached to
);
	pipeline.samples = 16;
	pipeline.fxaaEnabled = true;

    // Our built-in 'sphere' shape.
    var sphere = BABYLON.MeshBuilder.CreateSphere("sphere", {diameter: 0.1, segments: 16}, scene);

    // Move the sphere upward 1/2 its height
    sphere.position.x=2.14595;
    sphere.position.y =0.794744;
    sphere.position.z =0.202498;
    sphere.material=Marker;

    // Our built-in 'ground' shape.
    //var ground = BABYLON.MeshBuilder.CreateGround("ground", {width: 6, height: 6}, scene);

    return scene;
};
